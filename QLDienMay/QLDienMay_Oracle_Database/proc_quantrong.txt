---Proc Insert NCC---
CREATE OR REPLACE PROCEDURE Proc_Insert_NCC (ten_ncc NVARCHAR2, ma_so_thue CHAR, dia_chi VARCHAR2, return_value OUT INT) AS
check_ten NUMBER(1);
check_mst NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;  
    SELECT COUNT(MaNCC) INTO check_ten FROM NhaCungCap WHERE TenNCC = ten_ncc;
    SELECT COUNT(MaNCC) INTO check_mst FROM NhaCungCap WHERE MaSoThue = ma_so_thue;
    IF(check_ten > 0) THEN
        return_value := 1;
        ROLLBACK;
    ELSIF(check_mst > 0) THEN
        return_value := 2;
        ROLLBACK;
    ELSE
        INSERT INTO NhaCungCap(TenNCC,MaSoThue,DiaChi)
        VALUES(ten_ncc,ma_so_thue,dia_chi);
        return_value := 0;
        COMMIT;
    END IF;
    EXCEPTION
    WHEN OTHERS THEN
        return_value := -1;
END;

DECLARE 
check_1 NUMBER(1);
check_2 NUMBER(1);
BEGIN
    ---Proc_Insert_NCC('KAKADFKADKADFF','KADFKADF','HAHA',check_1);
    ---DBMS_OUTPUT.put_line(check_1);
    
    Proc_Delete_NCC('CC007',check_2);
    DBMS_OUTPUT.put_line(check_2);
END;
SELECT * FROM NHACUNGCAP;

---Proc Update NCC---
CREATE OR REPLACE PROCEDURE Proc_Update_NCC (ma_ncc CHAR, ten_ncc NVARCHAR2, ma_so_thue CHAR, dia_chi VARCHAR2, return_value OUT INT) AS
check_mancc NUMBER(1) := 0;
check_ten NUMBER(1);
check_mst NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;  
    SELECT COUNT(MaNCC) INTO check_ten FROM NhaCungCap WHERE TenNCC = ten_ncc AND MaNCC != ma_ncc;
    SELECT COUNT(MaNCC) INTO check_mst FROM NhaCungCap WHERE MaSoThue = ma_so_thue AND MaNCC != ma_ncc;
    SELECT COUNT(MaNCC) INTO check_mancc FROM NhaCungCap WHERE MANCC = ma_ncc;
    IF(check_ten > 0) THEN
        return_value := 1;
        ROLLBACK;
    ELSIF(check_mst > 0) THEN
        return_value := 2;
        ROLLBACK;
    ELSIF(check_mancc > 0) THEN
        SET TRANSACTION READ WRITE;   
        UPDATE NhaCungCap SET TenNCC = ten_ncc, MaSoThue = ma_so_thue, DiaChi = dia_chi WHERE MaNCC = ma_ncc;
        return_value := 0;
        COMMIT;
    ELSE
        return_value := 3;
        ROLLBACK;
    END IF;
    EXCEPTION
    WHEN OTHERS THEN
        return_value := -1;
END;
---Proc Delete NCC---
CREATE OR REPLACE PROCEDURE Proc_Delete_NCC (ma_ncc CHAR, return_value OUT INT) AS
check_ma NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE; 
    SELECT COUNT(MaNCC) INTO check_ma FROM NhaCungCap WHERE MANCC = ma_ncc;
    IF(check_ma > 0) THEN      
        DELETE FROM NhaCungCap WHERE MaNCC = ma_ncc;
        COMMIT;
        return_value := 0;
    ELSE
        return_value := 1;
        ROLLBACK;
    END IF;
    EXCEPTION
    WHEN OTHERS THEN
        return_value := -1;
END;

EXECUTE Proc_Insert_NCC('Toshiba VietNam','0000000001','72 Nguyễn Thị Minh Khai, Phường 6, Quận 3, Thành phố Hồ Chí Minh');
EXECUTE Proc_Insert_NCC('SamSung VietNam','0000000002','Bitexco Financial Tower, 2 Hải Triều, Bến Nghé, Quận 1, Thành phố Hồ Chí Minh');
EXECUTE Proc_Insert_NCC('Panasonic VietNam','0000000003','28 Nguyễn Thị Diệu, Phường 6, Quận 3, Thành phố Hồ Chí Minh');
EXECUTE Proc_Insert_NCC('LG Electronics VietNam','0000000004','233 Đồng Khởi, Quan 1, Quận 1, Thành phố Hồ Chí Minh');
EXECUTE Proc_Insert_NCC('Nhà phân phối Digiworld','0000000005','Số 201 – 203 Cách Mạng Tháng 8, Phường 4, Quận 3 Thành phố Hồ Chí Minh');
EXECUTE Proc_Insert_NCC('Sony VietNam','0000000006','93 Nguyễn Du');
EXECUTE Proc_Insert_NCC('Test NCC','0000000007','94 Nguyễn Du');
EXECUTE Proc_Update_NCC('CC006','Sony VietNam','0000000006','94 Nguyễn Du');
EXECUTE Proc_Delete_NCC('CC007');
SELECT * FROM NhaCungCap;

------------------------------------------------------------------
---Proc Insert TP---
CREATE OR REPLACE PROCEDURE Proc_Insert_TP (ten_tp NVARCHAR2, return_value OUT INT) AS
check_ten NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;   
    SELECT COUNT(MATHANHPHO) INTO check_ten FROM THANHPHO WHERE TENTHANHPHO = ten_tp;
    IF(check_ten > 0) THEN
        return_value := 1;
        ROLLBACK;
    ELSE
        INSERT INTO ThanhPho(TenThanhPho)
        VALUES(ten_tp);
        return_value := 0;
        COMMIT;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        return_value := -1;
END;
---Proc Update NCC---
CREATE OR REPLACE PROCEDURE Proc_Update_TP (ma_tp CHAR, ten_tp NVARCHAR2, return_value OUT INT) AS
check_ma NUMBER(1);
check_ten NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaThanhPho) INTO check_ma FROM ThanhPho WHERE mathanhpho = ma_tp;
    SELECT COUNT(MATHANHPHO) INTO check_ten FROM THANHPHO WHERE TENTHANHPHO = ten_tp AND MATHANHPHO != ma_tp;
    IF(check_ten > 0) THEN
        return_value := 1;
        ROLLBACK;
    ELSIF(check_ma > 0) THEN    
        UPDATE ThanhPho SET TenThanhPho = ten_tp WHERE MaThanhPho = ma_tp;
        return_value := 0;
        COMMIT;
    ELSE
        return_value := 2;
        ROLLBACK;
    END IF;  
    EXCEPTION
        WHEN OTHERS THEN
        return_value := -1;
END;

---Proc Delete TP---
CREATE OR REPLACE PROCEDURE Proc_Delete_TP (ma_tp CHAR, return_value OUT INT) AS
check_tp NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE; 
    SELECT COUNT(MaThanhPho) INTO check_tp FROM ThanhPho WHERE mathanhpho = ma_tp;
    IF(check_tp > 0) THEN       
        DELETE FROM ThanhPho WHERE MaThanhPho = ma_tp;
        return_value := 0;
        COMMIT;
    ELSE
        return_value := 1;
        ROLLBACK;
    END IF;  
    EXCEPTION
        WHEN OTHERS THEN
        return_value := -1;
END;

EXECUTE Proc_Insert_TP('Tp. Hồ Chí Minh')
EXECUTE Proc_Insert_TP('Hà Nội')
EXECUTE Proc_Insert_TP('Hải')
EXECUTE Proc_Update_TP('TP003','Hải Phòng');
EXECUTE Proc_Delete_TP('TP003')
SELECT * FROM ThanhPho Order by(MaThanhPho);

------------------------------------------------------------------
---Proc Insert KhuyenMai---
CREATE OR REPLACE PROCEDURE Proc_Insert_Khuyen_Mai (ten_km NVARCHAR2, phan_tram_khuyen_mai FLOAT, ngay_bat_dau TIMESTAMP, ngay_ket_thuc TIMESTAMP, mo_ta NVARCHAR2, return_value OUT INT) AS
BEGIN
    IF(ngay_bat_dau < ngay_ket_thuc) THEN
        SET TRANSACTION READ WRITE;   
        INSERT INTO KhuyenMai(TenKM,PhanTramKhuyenMai,NgayBatDau,NgayKetThuc,MoTa)
        VALUES(ten_km,phan_tram_khuyen_mai,ngay_bat_dau,ngay_ket_thuc,mo_ta);
        return_value := 0;
        COMMIT;
    ELSE
        return_value := 1;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        return_value := -1;
END;
---Proc Update KhuyenMai---
CREATE OR REPLACE PROCEDURE Proc_Update_Khuyen_Mai (ma_km CHAR, ten_km NVARCHAR2, phan_tram_khuyen_mai FLOAT, ngay_bat_dau TIMESTAMP, ngay_ket_thuc TIMESTAMP, mo_ta NVARCHAR2, return_value OUT INT) AS
check_km NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE; 
    SELECT COUNT(MAKHUYENMAI) INTO check_km FROM KHUYENMAI WHERE MAKHUYENMAI = ma_km;
    IF(ngay_bat_dau > ngay_ket_thuc) THEN
        return_value := 1;
        ROLLBACK;
    ELSIF(check_km > 0) THEN     
        UPDATE KhuyenMai SET TenKM = ten_km, PhanTramKhuyenMai = phan_tram_khuyen_mai, ngaybatdau = ngay_bat_dau, ngayketthuc = ngay_ket_thuc, mota = mo_ta WHERE makhuyenmai = ma_km;
        return_value := 0;
        COMMIT;
    ELSE
        return_value := 2;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        return_value := -1;
END;

---Proc Delete KhuyenMai---
CREATE OR REPLACE PROCEDURE Proc_Delete_Khuyen_Mai (ma_km CHAR, return_value OUT INT) AS
check_km NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;   
    SELECT COUNT(MAKHUYENMAI) INTO check_km FROM KHUYENMAI WHERE MAKHUYENMAI = ma_km;
    IF(check_km > 0) THEN
        DELETE FROM KhuyenMai WHERE makhuyenmai = ma_km;
        return_value := 0;
        COMMIT;
    ELSE
        return_value := 1;
        ROLLBACK;
    END IF;  
    EXCEPTION
        WHEN OTHERS THEN
        return_value := -1;
END;

EXECUTE Proc_Insert_Khuyen_Mai('Khuyến mãi năm 2021-2022',0.1,'1-JAN-2021','30-DEC-2021','Khuyến mãi năm 2021');
EXECUTE Proc_Insert_Khuyen_Mai('Khuyến mãi tháng 12',0.2,'1-DEC-2021-','30-DEC-2021','Khuyến mãi 20% tháng 12 2021');
EXECUTE Proc_Insert_Khuyen_Mai('Test',0.2,'1-DEC-2021-','30-DEC-2021','Khuyến mãi 20% tháng 12 2021');
EXECUTE Proc_Update_Khuyen_Mai('KM00000003','test2',0.2,'1-DEC-2021-','30-DEC-2021','Khuyến mãi 20% tháng 12 2021');
EXECUTE Proc_Delete_Khuyen_Mai('KM00000003');
SELECT * FROM KhuyenMai;

------------------------------------------------------------------

---Proc Insert DanhMuc---
CREATE OR REPLACE PROCEDURE Proc_Insert_Danh_Muc (ten_danh_muc NVARCHAR2, return_value OUT INT) AS
check_ten NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;   
    SELECT COUNT(MADANHMUC) INTO check_ten FROM DANHMUC WHERE TENDANHMUC = ten_danh_muc;
    IF(check_ten > 0)THEN
        return_value := 1;
        ROLLBACK;
    ELSE
        INSERT INTO DanhMuc(TenDanhMuc)
        VALUES(ten_danh_muc);
        return_value := 0;
        COMMIT;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        return_value := -1;
END;
---Proc Update DanhMuc---
CREATE OR REPLACE PROCEDURE Proc_Update_Danh_Muc (ma_danh_muc CHAR, ten_danh_muc NVARCHAR2, return_value OUT INT) AS
check_dm NUMBER(1);
check_ten NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MADANHMUC) INTO check_dm FROM DanhMuc WHERE MADANHMUC = ma_danh_muc;
    SELECT COUNT(MADANHMUC) INTO check_ten FROM DANHMUC WHERE TENDANHMUC = ten_danh_muc AND MADANHMUC != ma_danh_muc;
    IF(check_ten > 0)THEN
        return_value := 1;
        ROLLBACK;
    ELSIF(check_dm > 0) THEN
        UPDATE DanhMuc SET TenDanhMuc = ten_danh_muc WHERE MaDanhMuc = ma_danh_muc;
        return_value := 0;
        COMMIT;
    ELSE
        return_value := 2;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        return_value := -1;
END;

---Proc Delete DanhMuc---
CREATE OR REPLACE PROCEDURE Proc_Delete_Danh_Muc (ma_danh_muc CHAR, return_value OUT INT) AS
check_dm NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MADANHMUC) INTO check_dm FROM DanhMuc WHERE MADANHMUC = ma_danh_muc;
    IF(check_dm > 0) THEN
        DELETE FROM DanhMuc WHERE MaDanhMuc = ma_danh_muc;
        return_value := 0;
        COMMIT;
    ELSE
        return_value := 1;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        return_value := -1;
END;

EXECUTE Proc_Insert_Danh_Muc('Tủ lạnh - Tủ mát - Tủ đông');
EXECUTE Proc_Insert_Danh_Muc('Laptop - PC - Máy in - Phụ kiệ');
EXECUTE Proc_Insert_Danh_Muc('Tivi - loa - dàn âm thanh');
EXECUTE Proc_Insert_Danh_Muc('Test');
EXECUTE Proc_Update_Danh_Muc('DM004','Test2');
EXECUTE Proc_Delete_Danh_Muc('DM004');

SELECT * FROM DanhMuc;

------------------------------------------------------------------

---Proc Insert Loai---
CREATE OR REPLACE PROCEDURE Proc_Insert_Loai (ma_danh_muc CHAR, ten_loai NVARCHAR2, return_value OUT INT) AS
check_ten NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;   
    SELECT COUNT(MALOAI) INTO check_ten FROM LOAI WHERE TENLOAI = ten_loai AND MADANHMUC = ma_danh_muc;
    IF(check_ten > 0)THEN
        return_value := 1;
        ROLLBACK;
    ELSE
        INSERT INTO Loai(MaDanhMuc,TenLoai)
        VALUES(ma_danh_muc,ten_loai);
        return_value := 0;
        COMMIT;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        return_value := -1;
END;
---Proc Update Loai---
CREATE OR REPLACE PROCEDURE Proc_Update_Loai (ma_loai CHAR, ma_danh_muc CHAR, ten_loai NVARCHAR2, return_value OUT INT) AS
check_ten NUMBER(1);
check_ma NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaLoai) INTO check_ma FROM Loai WHERE MaLoai = ma_loai;
    SELECT COUNT(MALOAI) INTO check_ten FROM LOAI WHERE TENLOAI = ten_loai AND MADANHMUC = ma_danh_muc AND MaLoai != ma_loai;
    IF(check_ten > 0)THEN
        return_value := 1;
        ROLLBACK;
    ELSIF(check_ma > 0) THEN
        UPDATE Loai SET MaDanhMuc = ma_danh_muc, TenLoai = ten_loai WHERE MaLoai = ma_loai;
        return_value := 0;
        COMMIT;
    ELSE
        return_value := 2;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        return_value := -1;
END;

---Proc Delete Loai---
CREATE OR REPLACE PROCEDURE Proc_Delete_Loai (ma_loai CHAR, return_value OUT INT) AS
check_loai NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaLoai) INTO check_loai FROM Loai WHERE MaLoai = ma_loai;
    IF(check_loai > 0) THEN
        DELETE FROM Loai WHERE MaLoai = ma_loai;
        return_value := 0;
        COMMIT;
    ELSE
        return_value := 1;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        return_value := -1;
END;

EXECUTE Proc_Insert_Loai('DM001','Tủ lạnh');
EXECUTE Proc_Insert_Loai('DM001','Tủ đông');
EXECUTE Proc_Insert_Loai('DM001','Tủ mát');
EXECUTE Proc_Insert_Loai('DM001','Side by side');
EXECUTE Proc_Insert_Loai('DM001','Mini');
EXECUTE Proc_Insert_Loai('DM001','Multi doors');
EXECUTE Proc_Insert_Loai('DM001','Ngăn đá trê');
EXECUTE Proc_Insert_Loai('DM001','Ngăn đá dưới');
EXECUTE Proc_Insert_Loai('DM001','1 cửa');
EXECUTE Proc_Insert_Loai('DM001','2 cửa');
EXECUTE Proc_Insert_Loai('DM002','Đồ họa');
EXECUTE Proc_Insert_Loai('DM002','Gaming');
EXECUTE Proc_Insert_Loai('DM002','Văn phòng');
EXECUTE Proc_Insert_Loai('DM002','Máy tính bà');
EXECUTE Proc_Insert_Loai('DM002','Máy tính bà');
EXECUTE Proc_Insert_Loai('DM002','Phụ kiệ');
EXECUTE Proc_Insert_Loai('DM002','Laptop');
EXECUTE Proc_Insert_Loai('DM002','test');

EXECUTE Proc_Update_Loai('L0018','DM002','Test2');
EXECUTE Proc_Delete_Loai('L0018');

SELECT * FROM Loai;

------------------------------------------------------------------

---Proc Insert SanPham---
CREATE OR REPLACE PROCEDURE Proc_Insert_San_Pham (ten_san_pham NVARCHAR2, anh_minh_hoa VARCHAR, don_gia DECIMAL, khuyen_mai CHAR, return_value OUT INT) AS
check_ten NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;   
    SELECT COUNT(MASANPHAM) INTO check_ten FROM SANPHAM WHERE TENSANPHAM = ten_san_pham;
    IF(check_ten > 0)THEN
        return_value := 1;
        ROLLBACK;
    ELSE
        INSERT INTO SanPham(TenSanPham,AnhMinhHoa,DonGia,MaKhuyenMai)
        VALUES(ten_san_pham,anh_minh_hoa,don_gia,khuyen_mai);
        return_value := 0;
        COMMIT;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        return_value := -1;
END;
---Proc Update SanPham---
CREATE OR REPLACE PROCEDURE Proc_Update_San_Pham (ma_san_pham CHAR, ten_san_pham NVARCHAR2, anh_minh_hoa VARCHAR, don_gia DECIMAL, khuyen_mai CHAR, return_value OUT INT) AS
check_ma NUMBER(1);
check_ten NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaSanPham) INTO check_ma FROM SanPham WHERE MaSanPham = ma_san_pham;
    SELECT COUNT(MASANPHAM) INTO check_ten FROM SANPHAM WHERE TENSANPHAM = ten_san_pham AND MASANPHAM != ma_san_pham;
    IF(check_ten > 0)THEN
        return_value := 1;
        ROLLBACK;
    ELSIF(check_ma > 0) THEN
        UPDATE SanPham SET TenSanPham = ten_san_pham, AnhMinhHoa = anh_minh_hoa, DonGia = don_gia,MaKhuyenMai = khuyen_mai WHERE MaSanPham = ma_san_pham;
        return_value := 0;
        COMMIT;
    ELSE
        return_value := 2;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        return_value := -1;
END;

---Proc Delete SanPham---
CREATE OR REPLACE PROCEDURE Proc_Delete_San_Pham (ma_san_pham CHAR, return_value OUT INT) AS
check_sp NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaSanPham) INTO check_sp FROM SanPham WHERE MaSanPham = ma_san_pham;
    IF(check_sp > 0) THEN
        DELETE FROM SanPham WHERE MaSanPham = ma_san_pham;
        return_value := 0;
        COMMIT;
    ELSE
        return_value := 1;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        return_value := -1;
END;

EXECUTE Proc_Insert_San_Pham('Tủ lạnh Toshiba Inverter 312 lít GR-RT400WE-PMV(06)-MG',null,12990000,null);
EXECUTE Proc_Insert_San_Pham('Tủ lạnh Panasonic Inverter 550 lít NR-DZ600GXV',null,37990000,null);
EXECUTE Proc_Insert_San_Pham('Tủ lạnh Toshiba Inverter 622 lít GR-RF690WE-PGV',null,35990000,'KM00000001');
EXECUTE Proc_Insert_San_Pham('Tủ mát Panasonic 460 lít SMR-PT450A',null,16300000,null);
EXECUTE Proc_Insert_San_Pham('Laptop Dell Inspiron 7306 i5-1135G7 13.3 inch N3I5202W',null,27890000,null);
EXECUTE Proc_Insert_San_Pham('Test',null,27890000,null);

EXECUTE Proc_Update_San_Pham('SP00000006','Test2',null,27890000,null);
EXECUTE Proc_Delete_San_Pham('SP00000006');
SELECT * FROM SanPham;

------------------------------------------------------------------

---Proc Insert ChiTietLoai---
CREATE OR REPLACE PROCEDURE Proc_Insert_ChiTiet_Loai (ma_sp CHAR, ma_loai CHAR, return_value OUT INT) AS
CHECK_PK NUMBER(1);
BEGIN
    SELECT COUNT(MASANPHAM) INTO CHECK_PK FROM CHITIETLOAI WHERE MASANPHAM = MA_SP AND MALOAI = MA_LOAI;
    IF(CHECK_PK > 0) THEN
        return_value := 1;
        ROLLBACK;
    ELSE
        SET TRANSACTION READ WRITE;   
        INSERT INTO ChiTietLoai(MaSanPham,MaLoai)
        VALUES(ma_sp, ma_loai);
        RETURN_VALUE := 0;
        COMMIT;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;
---Proc Update ChiTietLoai---
CREATE OR REPLACE PROCEDURE Proc_Update_ChiTiet_Loai (ma_sp CHAR, ma_loai_cu CHAR, ma_loai_moi CHAR, return_value OUT INT) AS
check_pk_cu NUMBER(1);
check_pk_moi NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaSanPham) INTO check_pk_cu FROM CHITIETLOAI WHERE MaSanPham = ma_sp AND MALOAI = MA_LOAI_CU;
    SELECT COUNT(MaSanPham) INTO check_pk_moi FROM CHITIETLOAI WHERE MaSanPham = ma_sp AND MALOAI = ma_loai_moi AND MALOAI != MA_LOAI_CU;
    IF(CHECK_PK_MOI > 0) THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSIF(check_pk_cu > 0) THEN
        UPDATE ChiTietLoai SET MaLoai = ma_loai_moi WHERE MaSanPham = ma_sp AND MaLoai = ma_loai_cu;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 2;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

---Proc Delete ChiTietLoai---
CREATE OR REPLACE PROCEDURE Proc_Delete_ChiTiet_Loai (ma_sp CHAR, ma_loai CHAR, return_value OUT INT) AS
check_PK NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaSanPham) INTO check_PK FROM CHITIETLOAI WHERE MaSanPham = ma_sp AND MALOAI = MA_LOAI;
    IF(check_PK > 0) THEN
        DELETE FROM ChiTietLoai WHERE MaSanPham = ma_sp AND MaLoai = ma_loai; 
        return_value := 0;
        COMMIT;
    ELSE
        return_value := 1;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

EXECUTE Proc_Insert_ChiTiet_Loai('SP00000001','L0001');
EXECUTE Proc_Insert_ChiTiet_Loai('SP00000001','L0007');
EXECUTE Proc_Insert_ChiTiet_Loai('SP00000002','L0001');
EXECUTE Proc_Insert_ChiTiet_Loai('SP00000002','L0006');
EXECUTE Proc_Insert_ChiTiet_Loai('SP00000003','L0001');
EXECUTE Proc_Insert_ChiTiet_Loai('SP00000003','L0006');
EXECUTE Proc_Insert_ChiTiet_Loai('SP00000004','L0003');
EXECUTE Proc_Insert_ChiTiet_Loai('SP00000004','L0009');
EXECUTE Proc_Insert_ChiTiet_Loai('SP00000005','L0017');
EXECUTE Proc_Insert_ChiTiet_Loai('SP00000005','L0001');

EXECUTE Proc_Update_ChiTiet_Loai('SP00000005','L0001','SP00000005','L0002');
EXECUTE Proc_Delete_ChiTiet_Loai('SP00000005','L0002');
SELECT * FROM ChiTietLoai;


------------------------------------------------------------------

---Proc Insert TinhNang---
CREATE OR REPLACE PROCEDURE Proc_Insert_Tinh_Nang (ma_sp CHAR, ten_tinh_nang NVARCHAR2, mo_ta NVARCHAR2, hinh_anh VARCHAR, return_value OUT INT) AS
CHECK_TEN NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;   
    SELECT COUNT(MASANPHAM) INTO CHECK_TEN FROM TINHNANG WHERE MASANPHAM = MA_SP AND TENTINHNANG = TEN_TINH_NANG;
    IF(CHECK_TEN > 0)THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSE
        INSERT INTO TinhNang(MaSanPham,TenTinhNang,MoTa,HinhAnh)
        VALUES(ma_sp, ten_tinh_nang, mo_ta, hinh_anh);
        RETURN_VALUE := 0;
        COMMIT;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

---Proc Update TinhNang---
CREATE OR REPLACE PROCEDURE Proc_Update_Tinh_Nang (ma_sp CHAR, ten_tinh_nang_cu NVARCHAR2, ten_tinh_nang_MOI NVARCHAR2, mo_ta NVARCHAR2, hinh_anh VARCHAR, return_value OUT INT) AS
CHECK_PK NUMBER(1);
CHECK_TEN NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaSanPham) INTO CHECK_PK FROM TinhNang WHERE MaSanPham = ma_sp AND TenTinhNang = ten_tinh_nang_cu;
    SELECT COUNT(MaSanPham) INTO CHECK_TEN FROM TinhNang WHERE MaSanPham = ma_sp AND TenTinhNang = ten_tinh_nang_MOI AND TENTINHNANG != TEN_TINH_NANG_CU;
    IF(CHECK_TEN > 0)THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSIF(CHECK_PK > 0) THEN
        UPDATE TinhNang SET TenTinhNang = ten_tinh_nang_MOI, MoTa = mo_ta, HinhAnh = hinh_anh WHERE MaSanPham = ma_sp AND TenTinhNang = ten_tinh_nang_cu;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 2;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

---Proc Delete TinhNang---
CREATE OR REPLACE PROCEDURE Proc_Delete_Tinh_Nang (ma_sp CHAR, ten_tinh_nang NVARCHAR2, return_value OUT INT) AS
CHECK_PK NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaSanPham) INTO CHECK_PK FROM TinhNang WHERE MaSanPham = ma_sp AND TenTinhNang = ten_tinh_nang;
    IF(CHECK_PK > 0) THEN
        DELETE FROM TinhNang WHERE MaSanPham = ma_sp AND TenTinhNang = ten_tinh_nang;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 1;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

EXECUTE Proc_Insert_Tinh_Nang('SP00000001','Thiết kế sang trọng, bề mặt hoàn thiện tỉ mỉ', 'Tủ lạnh Toshiba Inverter 312 lít GR-RT400WE-PMV(06)-MG sở hữu thiết kế sang trọng, các chi tiết được tinh giảm hết mức tạo nên điểm nhấn mới lạ cho không gian bếp. Điểm đặc biệt là bề mặt tủ được hoàn thiện tối ưu với 10 lớp vật liệu cao cấp xếp chồng mang đến vẻ ngoài tủ tinh tế, chống bám vân tay và hạn chế trầy xước.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000001','Công nghệ Origin inverter, tiết kiệm điện năng', 'Tủ lạnh Toshiba Inverter 312 lít GR-RT400WE-PMV(06)-MG sở hữu công nghệ Origin Inverter. Theo đó máy nén inverter và quạt inverter hoạt động đồng bộ với nhau, giúp tủ tiết kiệm điện tối đa, cực kỳ êm ái và duy trì nhiệt độ luôn ổn định. Chắc chắn sẽ là giải pháp tuyệt vời cho hội chị em vào cuối tháng không còn lo lắng tiền điện cuối tháng.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000001','Ngăn đá lớ', 'Tủ lạnh Toshiba Inverter 312 lít GR-RT400WE-PMV(06)-MG sở hữu ngăn đá lớn giúp cất trữ thật nhiều thực phẩm tươi sống hơn. Với không gian ngăn đá lớn như vậy, người dùng sẽ thoải mái tiệc tùng.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000001','Khí lạnh thác đổ Air Fall Cooling', 'Tủ lạnh Toshiba Inverter 312 lít GR-RT400WE-PMV(06)-MG bổ sung thêm luồng khí lạnh thổi xuống từ phía trước kết hợp luồng khí từ phía sau cho khí lạnh tỏa đều khắp tủ. Điều này giúp thực phẩm luôn tươi ngon dù bạn cất giữ ở vị trí nào trong tủ.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000001','Ngăn Cooling Zone', 'Tủ lạnh Toshiba trang bị Ngăn Cooling Zone giúp bảo quản thịt cá từ 1 đến 2 ngày mà không cần rã đông. Điều này giúp quá trình chế biến thuận tiện hơn và giữ nguyên hương vị và chất dinh dưỡng.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000001','Công nghệ khử mùi PureBio', 'Tủ lạnh sở hữu công nghệ khử mùi PureBio bằng Ceramic được nhúng tinh thể Bạc (Ag+) để khử mùi, diệt khuẩn cho tủ và giúp bảo vệ sức khỏe người dùng.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000001','Ngăn rau củ tùy chỉnh độ ẩm', 'Tủ lạnh Toshiba 312 lít có ngăn rau  quả có thể tùy chỉnh độ ẩm phù hợp nhất cho từng loại thực phẩm, giúp giữ nguyên chất dinh dưỡng.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000002','Sang trọng với 4 cửa và không gian lưu trữ lớ', 'Tủ lạnh Panasonic 550 lít NR-DZ600GXVN với thiết kế 4 cửa không chỉ tối ưu hóa không gian lưu trữ thực phẩm và tô điểm cho gian bếp của bạn một vẻ đẹp sang trọng và hiện đại.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000002','Công nghệ Inverter', 'Tủ lạnh Panasonic trang bị công nghệ Inverter vận hành bền bỉ, ổn định, êm ái và tiết kiệm đáng kể chi phí điện. Kết hợp cùng cảm biến Econavi tủ lạnh tự động điều chỉnh công suất hoạt động máy nén.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000002','Làm lạnh nhanh chóng', 'Tủ lạnh có công nghệ Panorama giúp thổi khí lạnh đến mọi góc của các ngăn tủ, nhanh chóng làm lạnh và giữ độ tươi ngon cho thực phẩm.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000002','Công nghệ Ag Clea', 'Công nghệ Ag Clean sử dụng các tinh thể bạc Ag+ sẽ loại bỏ mùi hôi cũng như vi khuẩn gây hại, trả lại không gian trong lành cho thực phẩm bên trong tủ.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000002','Ngăn cấp đông mềm', 'Ở nhiệt độ -3 độ C, ngăn cấp đông mềm sẽ giúp đông lạnh bề mặt thịt, cá, để chúng có thể giữ nguyên các dưỡng chất và không bị đóng băng. Ngăn rau quả giữ ẩm Fresh Safe kích thước lớn, bảo quản rau củ tươi ngon như mới vừa mua về.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000003','Tủ lạnh Toshiba Inverter 622 lít GR-RF690WE-PGV hiện đại', 'Tủ lạnh Toshiba Inverter 622 lít GR-RF690WE-PGV sở hữu thiết kế sang trọng và đẳng cấp với không gian lưu trữ rộng lớn hứa hẹn sẽ tạo điểm nhấn thêm cho không gian nội thất của gia đình.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000003','Tủ lạnh Toshiba Inverter 622 lít tiết kiệm điện hiệu quả', 'Sở hữu chiếc tủ lạnh Inverter này, các bà nội trợ sẽ giảm bớt nỗi lo hóa đơn tiền điện mỗi tháng nhờ công nghệ Dual Inverter hiện đại được trang bị trên tủ lạnh giúp tiết kiệm điện năng hiệu quả. Không chỉ vậy, công nghệ Inverter giảm tối đa tiếng ồn nhưng vẫn duy trì độ lạnh ổn định, giúp máy hoạt động êm ái và bền bỉ.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000003','Công nghệ 3 dàn lạnh độc lập', 'Với thiết kế 3 dàn lạnh độc lập, riêng biệt cho từng ngăn, tủ lạnh sẽ giúp cho thực phẩm nhanh chóng đồng thời ngăn chặn không cho hơi lạnh luân chuyển giữa các ngăn, đảm bảo thực phẩm không bị lẫn mùi vào nhau và được tươi ngon lâu hơn trong suốt quá trình bảo quản.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000003','Tủ lạnh Toshiba trang bị 26 ngăn chứa', 'Tủ lạnh Toshiba Inverter 622 lít trang bị 26 ngăn chứa mang đến không gian lưu trữ thực phẩm cực lớn cho bạn đừn được nhiều thực phẩm dùng cho cả tuần.',null); 
EXECUTE Proc_Insert_Tinh_Nang('SP00000003','Ngăn cấp đông mềm bảo quản thịt cá hiệu quả', 'Tủ lạnh được trang bị ngăn chuyển đổi thông minh Convert Zone cho phép người dùng thay đổi nhiệt độ từ -18 đến 7 độ C, từ ngăn đông thành ngăn mát hoặc ngăn đông mềm và ngược lại, tạo thêm cho bạn nhiều không gian lưu trữ linh hoạt theo nhu cầu sử dụng. Ngăn cấp đông mềm giúp bảo quản thịt cá với nhiệt độ đông mềm -5 độ C giúp thực phẩm không bị đông đá.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000003','Công nghệ khử mùi, diệt khuẩn Plasma + Pure', 'Tủ lạnh sủ dụng công nghệ khử mùi Plasma+ Pure với khả năng tạo ra ion âm và ion dương có tác dụng làm giảm hoạt động của vi khuẩn và hấp thụ mùi hôi giúp luồng khí lạnh luôn trong lành, giữ thực phẩm luôn tươi ngon.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000003','Màn hình cảm ứng trên tủ lạnh', 'Ngoài những tính năng nổi trội trên, tủ lạnh Toshiba còn trang bị màn hình cảm ứng trên cửa tủ cho bạn dễ dàng điều chỉnh nhiệt độ bên trong tủ lạnh bằng cách nhấn nút. Ngoài ra, hệ thống đèn LED giúp chiếu sáng khắp nội thất bên trong tủ giúp bạn dễ dàng quan sát bên trong tủ lạnh.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000004','Thiết kế gọn gàng', 'Tủ mát Panasonic SMR-PT450A có thiết kế hiện đại với 1 cửa đơn giản thuận tiện cho người dùng khi lấy các loại thức uống, giải khát được bảo quản bên trong tủ mát. Sản phẩm được thích hợp sử dụng cho các siêu thị, cửa hàng tiện lợi, bách hóa gia đình.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000004','Chất liệu cửa kính', 'Tủ mát có thiết kế cửa bằng chất liệu kính trong suốt dễ dàng cho người dùng có thể thấy và quan sát được loại thức uống đang cần để được ngay. Chất liệu kính trơn nhẵn rất dễ lau chùi và vệ sinh. Tủ mát Panasonic SMR-PT450A 460 lít sử dụng rất tốt và bền.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000004','Dung tích lớn 460 lít', 'Tủ mát Panasonic SMR-PT450A có dung tích lưu trữ khá lớn 460 lít với 5 tầng bảo quản cho phép người dùng có thể chứa được nhiều loại nước giải khát hơn. Dễ dàng đặt các loại chai có kích thước khác nhau vào trong tủ mát.',null);
EXECUTE Proc_Insert_Tinh_Nang('SP00000004','Công suất hoạt động 200W', 'Tủ mát Panasonic SMR-PT450A 460 lít hoạt động tốt và bền bỉ cùng động cơ có công suất 200W giúp làm mát nhanh chóng hơn, các loại thức uống được làm lạnh hiệu quả đáp ứng tốt nhu cầu sử dụng cũng như kinh doanh.',null);

EXECUTE Proc_Insert_Tinh_Nang('SP00000004','Test','mota',null);
EXECUTE Proc_Update_Tinh_Nang('SP00000004','Test','Test2','mota2',null);
EXECUTE Proc_Delete_Tinh_Nang('SP00000004','Test2');
SELECT * FROM TinhNang;


------------------------------------------------------------------

---Proc Insert DacDiemNoiBat---
CREATE OR REPLACE PROCEDURE Proc_Insert_Dac_Diem (ma_sp CHAR, ten_dac_diem NVARCHAR2, return_value OUT INT) AS
CHECK_PK NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;   
    SELECT COUNT(MASANPHAM) INTO CHECK_PK FROM DACDIEMNOIBAT WHERE MASANPHAM = MA_SP AND TENDACDIEM = TEN_DAC_DIEM;
    IF(CHECK_PK > 0)THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSE
        INSERT INTO DacDiemNoiBat(MaSanPham,TenDacDiem)
        VALUES(ma_sp, ten_dac_diem);
        RETURN_VALUE := 0;
        COMMIT;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;
---Proc Update DacDiem---
CREATE OR REPLACE PROCEDURE Proc_Update_Dac_Diem (ma_sp CHAR, ten_dac_diem_cu NVARCHAR2, ten_dac_diem_MOI NVARCHAR2, return_value OUT INT) AS
check_PK NUMBER(1);
check_TEN NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaSanPham) INTO check_PK FROM DacDiemNoiBat WHERE MaSanPham = ma_sp AND TenDacDiem = ten_dac_diem_cu;
    SELECT COUNT(MaSanPham) INTO check_TEN FROM DacDiemNoiBat WHERE MaSanPham = ma_sp AND TenDacDiem = ten_dac_diem_MOI AND TENDACDIEM != TEN_DAC_DIEM_CU;
    IF(CHECK_TEN > 0) THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSIF(check_PK > 0) THEN
        UPDATE DacDiemNoiBat SET TenDacDiem = ten_dac_diem_MOI WHERE MaSanPham = ma_sp AND TenDacDiem = ten_dac_diem_cu;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 2;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

---Proc Delete DacDiem---
CREATE OR REPLACE PROCEDURE Proc_Delete_Dac_Diem (ma_sp CHAR, ten_dac_diem NVARCHAR2, return_value OUT INT) AS
CHECK_PK NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaSanPham) INTO CHECK_PK FROM DacDiemNoiBat WHERE MaSanPham = ma_sp AND TenDacDiem = ten_dac_diem;
    IF(CHECK_PK > 0) THEN
        DELETE FROM DacDiemNoiBat WHERE MaSanPham = ma_sp AND TenDacDiem = ten_dac_diem;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 1;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;


EXECUTE Proc_Insert_Dac_Diem('SP00000001','Tủ lạnh ngăn đá trên dung tích 312L thích hợp cho gia đình 5 - 6 người');
EXECUTE Proc_Insert_Dac_Diem('SP00000001','Công nghệ Inverter giúp tủ lạnh vận hành êm ái, bền bỉ, tiết kiệm điệ');
EXECUTE Proc_Insert_Dac_Diem('SP00000001','Công nghệ Air Fall Cooling giúp bảo quản thực phẩm tươi ngon đồng đều');
EXECUTE Proc_Insert_Dac_Diem('SP00000001','Ngăn Cooling Zone bảo quản thịt, cá tươi 1 - 2 ngày không cần rã đông');
EXECUTE Proc_Insert_Dac_Diem('SP00000001','Ngăn rau quả chỉnh ẩm giúp rau quả tươi ngon, giữ nhiều chất dinh dưỡng');
EXECUTE Proc_Insert_Dac_Diem('SP00000001','Hệ thống PureBio khử mùi diệt khuẩn giúp không khí trong tủ trong lành');
EXECUTE Proc_Insert_Dac_Diem('SP00000002','Công nghệ Ag Clean, kháng khuẩn loại bỏ mùi hôi hiệu quả');
EXECUTE Proc_Insert_Dac_Diem('SP00000002','Tiết kiệm điện với công nghệ Inverter, cảm biến Econavi');
EXECUTE Proc_Insert_Dac_Diem('SP00000002','Dung tích 550 lít phù hợp với gia đình 4-5 người');
EXECUTE Proc_Insert_Dac_Diem('SP00000002','Công nghệ đông chuẩn mềm Prime Fresh giữ đông thực phẩm tốt');
EXECUTE Proc_Insert_Dac_Diem('SP00000002','Ngăn rau củ kép có nhiều không gian lưu trữ hơ');
EXECUTE Proc_Insert_Dac_Diem('SP00000003','Thiết kế sang trọng hiện đại nân tầm không gian nội thất');
EXECUTE Proc_Insert_Dac_Diem('SP00000003','Dung tích 622 lít phù hợp với gia đình trên 5 thành viê');
EXECUTE Proc_Insert_Dac_Diem('SP00000003','Công nghệ Inverter bền bỉ, tiết kiệm điện năng hiệu quả');
EXECUTE Proc_Insert_Dac_Diem('SP00000003','Công nghệ 3 dàn lạnh độc lập bảo quản thực phẩm tươi ngo');
EXECUTE Proc_Insert_Dac_Diem('SP00000003','Công nghệ Plasma+ Pure kháng khuẩn, khử mùi hiệu quả');
EXECUTE Proc_Insert_Dac_Diem('SP00000003','Ngăn chuyển đổi linh hoạt tối ưu không gian chưa thực phẩm');
EXECUTE Proc_Insert_Dac_Diem('SP00000003','Thiết kế 26 ngăn chứa cho không gian lưu trữ thực phẩm lớ');
EXECUTE Proc_Insert_Dac_Diem('SP00000003','Đèn LED giúp dễ dàng quan sát bên trong tủ lạnh');
EXECUTE Proc_Insert_Dac_Diem('SP00000003','Điều chỉnh nhiệt độ bằng nút nhấn bên ngoài màn hình');
EXECUTE Proc_Insert_Dac_Diem('SP00000003','Ngăn cấp đông mềm -5 độ C bảo quản thịt cá hiệu quả');
EXECUTE Proc_Insert_Dac_Diem('SP00000004','Thiết kế 1 cửa đơn giản, tiện lợi, dễ dàng đóng/mở');
EXECUTE Proc_Insert_Dac_Diem('SP00000004','Có 5 ngăn kệ, dễ dàng phân chia các loại nước giải khát');
EXECUTE Proc_Insert_Dac_Diem('SP00000004','Công suất 200W mạnh mẽ, làm lạnh nhanh chóng');
EXECUTE Proc_Insert_Dac_Diem('SP00000004','Cửa kính dày và trong suốt, bền bỉ, dễ dàng lau chùi');
EXECUTE Proc_Insert_Dac_Diem('SP00000004','Trang bị đèn LED giúp chiếu sáng vào buổi tối tiện lợi');
EXECUTE Proc_Insert_Dac_Diem('SP00000005','Laptop có trọng lượng nhẹ 1.37kg, bản lề có thể gập xoay linh hoạt 360 độ');
EXECUTE Proc_Insert_Dac_Diem('SP00000005','Bộ xử lý i5-1135G7, 8GB RAM cho hiệu năng mạnh mẽ, đa nhiệt mượt mà');
EXECUTE Proc_Insert_Dac_Diem('SP00000005','Ổ cứng SSD 512GB cho tốc độ phản hồi nhanh chóng, lưu trữ nhiều hơ');
EXECUTE Proc_Insert_Dac_Diem('SP00000005','Màn hình 13.3 inch Full HD hiển thị hình ảnh sắc nét, màu sắc sống động');
EXECUTE Proc_Insert_Dac_Diem('SP00000005','Bàn phím có đèn nền hỗ trợ người dùng trong điều kiện ánh sáng yếu');
EXECUTE Proc_Insert_Dac_Diem('SP00000005','Laptop trang bị cảm biến vân tay giúp mở máy nhanh chóng chỉ với 1 chạm');
EXECUTE Proc_Insert_Dac_Diem('SP00000005','Công nghệ Realtek High Definition Audio cho âm thanh chân thực trong trẻo');

EXECUTE Proc_Insert_Dac_Diem('SP00000005','Test');
EXECUTE Proc_Update_Dac_Diem('SP00000005','Test','Test2');
EXECUTE Proc_Delete_Dac_Diem('SP00000005','Test2');
select * from dacdiemnoibat order by(masanpham);

------------------------------------------------------------------

---Proc Insert ThongSoKiThuat---
CREATE OR REPLACE PROCEDURE Proc_Insert_Thong_So (ma_sp CHAR, ten_thong_so NVARCHAR2, mo_ta NVARCHAR2, return_value OUT INT) AS
CHECK_PK NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;   
    SELECT COUNT(MASANPHAM) INTO CHECK_PK FROM THONGSOKITHUAT WHERE MASANPHAM = MA_SP AND TENTHONGSO = TEN_THONG_SO;
    IF(CHECK_PK > 0)THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSE
        INSERT INTO ThongSoKiThuat(MaSanPham,TenThongSo,MoTa)
        VALUES(ma_sp, ten_thong_so, mo_ta);
        RETURN_VALUE := 0;
        COMMIT;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;
---Proc Update ThongSoKiThuat---
CREATE OR REPLACE PROCEDURE Proc_Update_Thong_So (ma_sp CHAR, ten_thong_so_cu NVARCHAR2, ten_thong_so_MOI NVARCHAR2, mo_ta NVARCHAR2, return_value OUT INT) AS
CHECK_PK NUMBER(1);
CHECK_TEN NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaSanPham) INTO CHECK_PK FROM ThongSoKiThuat WHERE MaSanPham = ma_sp AND TenThongSo = ten_thong_so_cu;
    SELECT COUNT(MaSanPham) INTO CHECK_TEN FROM ThongSoKiThuat WHERE MaSanPham = ma_sp AND TenThongSo = ten_thong_so_MOI AND TENTHONGSO != TEN_THONG_SO_CU;
    IF(CHECK_TEN > 0) THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSIF(CHECK_PK > 0) THEN
        UPDATE ThongSoKiThuat SET TenThongSo = ten_thong_so_MOI, MoTa = mo_ta WHERE MaSanPham = ma_sp AND TenThongSo = ten_thong_so_cu;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 2;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

---Proc Delete ThongSoKiThuat---
CREATE OR REPLACE PROCEDURE Proc_Delete_Thong_So (ma_sp CHAR, ten_thong_so NVARCHAR2, return_value OUT INT) AS
CHECK_PK NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaSanPham) INTO CHECK_PK FROM ThongSoKiThuat WHERE MaSanPham = ma_sp AND TenThongSo = ten_thong_so;
    IF(CHECK_PK > 0) THEN
        DELETE FROM ThongSoKiThuat WHERE MaSanPham = ma_sp AND TenThongSo = ten_thong_so;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 1;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

EXECUTE Proc_Insert_Thong_So('SP00000001','Model','GR-RT400WE-PMV(06)-MG');
EXECUTE Proc_Insert_Thong_So('SP00000001','Màu sắc','Cửa thép xám chống vân tay');
EXECUTE Proc_Insert_Thong_So('SP00000001','Nhà sản xuất','Toshiba');
EXECUTE Proc_Insert_Thong_So('SP00000001','Xuất xứ','Trung Quốc');
EXECUTE Proc_Insert_Thong_So('SP00000001','Thời gian bảo hành','24 Tháng');
EXECUTE Proc_Insert_Thong_So('SP00000001','Địa điểm bảo hành','Nguyễn Kim');
EXECUTE Proc_Insert_Thong_So('SP00000001','Kiểu tủ lạnh','Ngăn đá trê');
EXECUTE Proc_Insert_Thong_So('SP00000001','Số cửa tủ','2');
EXECUTE Proc_Insert_Thong_So('SP00000001','Dung tích tủ lạnh','312');
EXECUTE Proc_Insert_Thong_So('SP00000001','Dung tích ngăn đá','84');
EXECUTE Proc_Insert_Thong_So('SP00000001','Dung tích ngăn lạnh','228');
EXECUTE Proc_Insert_Thong_So('SP00000001','Chất liệu khay','Khay bằng kính chịu lực');
EXECUTE Proc_Insert_Thong_So('SP00000001','Công nghệ làm lạnh','Air Fall Cooling');
EXECUTE Proc_Insert_Thong_So('SP00000001','Kháng khuẩn / Khử mùi','Hệ thống khử mùi diệt khuẩn PureBio');
EXECUTE Proc_Insert_Thong_So('SP00000001','Công nghệ Inverter','Công nghệ Origin Inverter');
EXECUTE Proc_Insert_Thong_So('SP00000001','Khối lượng sản phẩm (kg)','58 kg');
EXECUTE Proc_Insert_Thong_So('SP00000001','Kích thước sản phẩm','595 x 695 x 1620 mm');
EXECUTE Proc_Insert_Thong_So('SP00000001','Kích thước thùng','655 x 735 x 1670 mm');
EXECUTE Proc_Insert_Thong_So('SP00000001','Khối lượng thùng (kg)','64 kg');

EXECUTE Proc_Insert_Thong_So('SP00000002','Model','NR-DZ600GXV');
EXECUTE Proc_Insert_Thong_So('SP00000002','Màu sắc','Đe');
EXECUTE Proc_Insert_Thong_So('SP00000002','Nhà sản xuất','Panasonic');
EXECUTE Proc_Insert_Thong_So('SP00000002','Xuất xứ','Thái La');
EXECUTE Proc_Insert_Thong_So('SP00000002','Năm ra mắt','2019');	
EXECUTE Proc_Insert_Thong_So('SP00000002','Thời gian bảo hành','12 Tháng');
EXECUTE Proc_Insert_Thong_So('SP00000002','Địa điểm bảo hành','Nguyễn Kim');
EXECUTE Proc_Insert_Thong_So('SP00000002','Kiểu tủ lạnh','Multi doors');
EXECUTE Proc_Insert_Thong_So('SP00000002','Số cửa tủ','4 cửa');
EXECUTE Proc_Insert_Thong_So('SP00000002','Dung tích tủ lạnh','550');
EXECUTE Proc_Insert_Thong_So('SP00000002','Dung tích ngăn đá','156');
EXECUTE Proc_Insert_Thong_So('SP00000002','Dung tích ngăn lạnh','394');
EXECUTE Proc_Insert_Thong_So('SP00000002','Chất liệu khay','Khay bằng kính chịu lực');
EXECUTE Proc_Insert_Thong_So('SP00000002','Công nghệ làm lạnh','Econavi');
EXECUTE Proc_Insert_Thong_So('SP00000002','Kháng khuẩn / Khử mùi','Công nghệ kháng khuẩn Ag Clean với tinh thể bạc Ag+');
EXECUTE Proc_Insert_Thong_So('SP00000002','Công nghệ Inverter','Có');
EXECUTE Proc_Insert_Thong_So('SP00000002','Chất liệu bên ngoài','Mặt gương');
EXECUTE Proc_Insert_Thong_So('SP00000002','Làm đá tự động','Có');
EXECUTE Proc_Insert_Thong_So('SP00000002','Chuông báo cửa','Có');
EXECUTE Proc_Insert_Thong_So('SP00000002','Khối lượng sản phẩm (kg)','112 kg');
EXECUTE Proc_Insert_Thong_So('SP00000002','Kích thước sản phẩm','1846 x 805 x 790 mm');

EXECUTE Proc_Insert_Thong_So('SP00000003','Model','GR-RF690WE');
EXECUTE Proc_Insert_Thong_So('SP00000003','Màu sắc','Gương xanh đe');
EXECUTE Proc_Insert_Thong_So('SP00000003','Nhà sản xuất','Toshiba');
EXECUTE Proc_Insert_Thong_So('SP00000003','Xuất xứ','Trung Quốc');
EXECUTE Proc_Insert_Thong_So('SP00000003','Năm ra mắt','2019');
EXECUTE Proc_Insert_Thong_So('SP00000003','Thời gian bảo hành','24 Tháng');
EXECUTE Proc_Insert_Thong_So('SP00000003','Địa điểm bảo hành','Nguyễn Kim');
EXECUTE Proc_Insert_Thong_So('SP00000003','Kiểu tủ lạnh','Multi doors');
EXECUTE Proc_Insert_Thong_So('SP00000003','Số cửa tủ','4 cửa');
EXECUTE Proc_Insert_Thong_So('SP00000003','Dung tích tủ lạnh','622');
EXECUTE Proc_Insert_Thong_So('SP00000003','Dung tích ngăn đá','92');
EXECUTE Proc_Insert_Thong_So('SP00000003','Dung tích ngăn lạnh','438 lít + 92 lít');
EXECUTE Proc_Insert_Thong_So('SP00000003','Chất liệu khay','Khay bằng kính chịu lực');
EXECUTE Proc_Insert_Thong_So('SP00000003','Công nghệ làm lạnh','Econavi');
EXECUTE Proc_Insert_Thong_So('SP00000003','Kháng khuẩn / Khử mùi','Hệ thống khử mùi diệt khuẩn Plasma + Pure');
EXECUTE Proc_Insert_Thong_So('SP00000003','Công nghệ Inverter','Có');
EXECUTE Proc_Insert_Thong_So('SP00000003','Khối lượng sản phẩm (kg)','142 kg');
EXECUTE Proc_Insert_Thong_So('SP00000003','Kích thước sản phẩm','905 x 775 x 1935 mm');

EXECUTE Proc_Insert_Thong_So('SP00000004','Model','SMR-PT450A');
EXECUTE Proc_Insert_Thong_So('SP00000004','Màu sắc','Trắng');
EXECUTE Proc_Insert_Thong_So('SP00000004','Nhà sản xuất','Panasonic');
EXECUTE Proc_Insert_Thong_So('SP00000004','Xuất xứ','Thái La');
EXECUTE Proc_Insert_Thong_So('SP00000004','Thời gian bảo hành','12 Tháng');
EXECUTE Proc_Insert_Thong_So('SP00000004','Địa điểm bảo hành','Nguyễn Kim');
EXECUTE Proc_Insert_Thong_So('SP00000004','Loại tủ','Tủ đứng');
EXECUTE Proc_Insert_Thong_So('SP00000004','Số cửa tủ','1 cửa');
EXECUTE Proc_Insert_Thong_So('SP00000004','Dung tích','460 lít');
EXECUTE Proc_Insert_Thong_So('SP00000004','Công suất','200 W');
EXECUTE Proc_Insert_Thong_So('SP00000004','Nhiệt độ','0°C ~ 10°C');
EXECUTE Proc_Insert_Thong_So('SP00000004','Loại gas','R-134a');
EXECUTE Proc_Insert_Thong_So('SP00000004','Tiết kiệm điệ','Có');
EXECUTE Proc_Insert_Thong_So('SP00000004','Chất liệu cửa tủ','Kính');
EXECUTE Proc_Insert_Thong_So('SP00000004','Kích thước thùng','670x642x1998 mm');
EXECUTE Proc_Insert_Thong_So('SP00000004','Khối lượng thùng (kg)','110 kg');

EXECUTE Proc_Insert_Thong_So('SP00000005','Model','N3I5202W');
EXECUTE Proc_Insert_Thong_So('SP00000005','Màu sắc','Đe');
EXECUTE Proc_Insert_Thong_So('SP00000005','Nhà sản xuất','DELL');
EXECUTE Proc_Insert_Thong_So('SP00000005','Xuất xứ','Trung Quốc');
EXECUTE Proc_Insert_Thong_So('SP00000005','Thời gian bảo hành','12 Tháng');
EXECUTE Proc_Insert_Thong_So('SP00000005','Địa điểm bảo hành','Nguyễn Kim');
EXECUTE Proc_Insert_Thong_So('SP00000005','CPU','i5-1135G7');
EXECUTE Proc_Insert_Thong_So('SP00000005','Tốc độ CPU','2.40 GHz');
EXECUTE Proc_Insert_Thong_So('SP00000005','Tốc độ CPU tối đa','Turbo Boost 4.2 GHz');
EXECUTE Proc_Insert_Thong_So('SP00000005','Loại RAM','LPDDR4X (On board)');
EXECUTE Proc_Insert_Thong_So('SP00000005','Dung lượng RAM','8 GB');
EXECUTE Proc_Insert_Thong_So('SP00000005','Loại ổ đĩa cứng','SSD 512GB NVMe PCIe');
EXECUTE Proc_Insert_Thong_So('SP00000005','Chipset card đồ họa','Intel Iris Xe Graphics');
EXECUTE Proc_Insert_Thong_So('SP00000005','Kích thước màn hình','13.3 inch');
EXECUTE Proc_Insert_Thong_So('SP00000005','Độ phân giải màn hình','FHD (1920 x 1080)');
EXECUTE Proc_Insert_Thong_So('SP00000005','Màn hình cảm ứng','Có');
EXECUTE Proc_Insert_Thong_So('SP00000005','Công nghệ âm thanh','Realtek High Definition Audio');
EXECUTE Proc_Insert_Thong_So('SP00000005','Chuẩn WiFi','Wi-Fi 6 AX201, Bluetooth v5.0');
EXECUTE Proc_Insert_Thong_So('SP00000005','Cổng USB','1 USB, 1 USB Type C, 1 Thunderbolt 4');
EXECUTE Proc_Insert_Thong_So('SP00000005','Cổng HDMI','Có');
EXECUTE Proc_Insert_Thong_So('SP00000005','Khe đọc thẻ nhớ','1 micro SD card reader');
EXECUTE Proc_Insert_Thong_So('SP00000005','Kết nối khác laptop','1 jack 3.5');
EXECUTE Proc_Insert_Thong_So('SP00000005','Camera','HD webcam');
EXECUTE Proc_Insert_Thong_So('SP00000005','Chất liệu vỏ','Vỏ kim loại nguyên khối');
EXECUTE Proc_Insert_Thong_So('SP00000005','Tính năng mở rộng','Bảo mật vân tay, Có đèn bàn phím');
EXECUTE Proc_Insert_Thong_So('SP00000005','HĐH kèm theo máy','Win 10 Home');
EXECUTE Proc_Insert_Thong_So('SP00000005','Độ dày','16.74 mm');
EXECUTE Proc_Insert_Thong_So('SP00000005','Chiều dài','305.2 mm');
EXECUTE Proc_Insert_Thong_So('SP00000005','Chiều rộng','206.4 mm');
EXECUTE Proc_Insert_Thong_So('SP00000005','Khối lượng sản phẩm (kg)','1.37 kg');

EXECUTE Proc_Insert_Thong_So('SP00000005','Test','mota');
EXECUTE Proc_Update_Thong_So('SP00000005','Test','Test2','mota2');
EXECUTE Proc_Delete_Thong_So('SP00000005','Test2');
SELECT * FROM ThongSoKiThuat;


------------------------------------------------------------------

---Proc Insert ChucVu---
CREATE OR REPLACE PROCEDURE Proc_Insert_Chuc_Vu (ten_chuc_vu NVARCHAR2, return_value OUT INT) AS
CHECK_TEN NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;   
    SELECT COUNT(MACHUCVU) INTO CHECK_TEN FROM CHUCVU WHERE TENCHUCVU = TEN_CHUC_VU;
    IF(CHECK_TEN > 0) THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSE
        INSERT INTO ChucVu(TenChucVu)
        VALUES(ten_chuc_vu);
        RETURN_VALUE := 0;
        COMMIT;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;
---Proc Update ChucVu---
CREATE OR REPLACE PROCEDURE Proc_Update_Chuc_Vu (ma_chuc_vu CHAR, ten_chuc_vu NVARCHAR2, return_value OUT INT) AS
CHECK_PK NUMBER(1);
CHECK_TEN NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaChucVu) INTO CHECK_PK FROM ChucVu WHERE MaChucVu = ma_chuc_vu;
    SELECT COUNT(MaChucVu) INTO CHECK_TEN FROM ChucVu WHERE TENCHUCVU = TEN_CHUC_VU AND MACHUCVU != MA_CHUC_VU;
    IF(CHECK_TEN > 0) THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSIF(CHECK_PK > 0) THEN
        UPDATE ChucVu SET TenChucVu = ten_chuc_vu WHERE MaChucVu = ma_chuc_vu;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 2;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

---Proc Delete ChucVu---
CREATE OR REPLACE PROCEDURE Proc_Delete_Chuc_Vu (ma_chuc_vu CHAR, return_value OUT INT) AS
CHECK_PK NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaChucVu) INTO CHECK_PK FROM ChucVu WHERE MaChucVu = ma_chuc_vu;
    IF(CHECK_PK > 0) THEN
        DELETE FROM ChucVu WHERE MaChucVu = ma_chuc_vu;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 1;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

EXECUTE Proc_Insert_Chuc_Vu('Cửa hàng trưởng');
EXECUTE Proc_Insert_Chuc_Vu('Quản lý cửa hàng');
EXECUTE Proc_Insert_Chuc_Vu('Kế toán cửa hàng');
EXECUTE Proc_Insert_Chuc_Vu('Thu ngân');
EXECUTE Proc_Insert_Chuc_Vu('Nhân viên');
EXECUTE Proc_Insert_Chuc_Vu('Trưởng kho');

EXECUTE Proc_Insert_Chuc_Vu('Test');
EXECUTE Proc_Update_Chuc_Vu('CV007','Test2');
EXECUTE Proc_Delete_Chuc_Vu('CV007');
SELECT * FROM CHUCVU;

------------------------------------------------------------------

---Proc Insert CuaHang---
CREATE OR REPLACE PROCEDURE Proc_Insert_Cua_Hang (dia_chi NVARCHAR2, thanh_pho CHAR, cua_hang_truong CHAR, ngay_thanh_lap TIMESTAMP, return_value OUT INT) AS
CHECK_DC NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;   
    SELECT COUNT(MACUAHANG) INTO CHECK_DC FROM CUAHANG WHERE DIACHI = DIA_CHI;
    IF(CHECK_DC > 0) THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSE
        INSERT INTO CuaHang(DiaChi,ThanhPho,CuaHangTruong,NgayThanhLap)
        VALUES(dia_chi,thanh_pho,cua_hang_truong,ngay_thanh_lap);    
        RETURN_VALUE := 0;
        COMMIT;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;
---Proc Update CuaHang---
CREATE OR REPLACE PROCEDURE Proc_Update_Cua_Hang (ma_cua_hang CHAR, dia_chi NVARCHAR2, thanh_pho CHAR, cua_hang_truong CHAR, ngay_thanh_lap TIMESTAMP, return_value OUT INT) AS
CHECK_PK NUMBER(1);
CHECK_DC NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaCuaHang) INTO CHECK_PK FROM CuaHang WHERE MaCuaHang = ma_cua_hang;
    SELECT COUNT(MaCuaHang) INTO CHECK_DC FROM CuaHang WHERE DIACHI = DIA_CHI AND MaCuaHang != ma_cua_hang;
    IF(CHECK_DC > 0) THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSIF(CHECK_PK > 0) THEN
        UPDATE CuaHang SET DiaChi = dia_chi, ThanhPho = thanh_pho, CuaHangTruong = cua_hang_truong, NgayThanhLap = ngay_thanh_lap WHERE MaCuaHang = ma_cua_hang;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 2;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

---Proc Delete CuaHang---
CREATE OR REPLACE PROCEDURE Proc_Delete_Cua_Hang (ma_cua_hang CHAR, return_value OUT INT) AS
CHECK_PK NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaCuaHang) INTO CHECK_PK FROM CuaHang WHERE MaCuaHang = ma_cua_hang;
    IF(CHECK_PK > 0) THEN
        DELETE FROM CuaHang WHERE MaCuaHang = ma_cua_hang;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 1;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;


------------------------------------------------------------------

---Proc Insert NhanVien---
CREATE OR REPLACE PROCEDURE Proc_Insert_Nhan_Vien (ten_nv NVARCHAR2, ngay_sinh TIMESTAMP, s_dt CHAR, e_mail CHAR, dia_chi NVARCHAR2, gioi_tinh CHAR, chuc_vu CHAR, cua_hang CHAR, hinh_thuc CHAR, tai_khoan CHAR, mat_khau CHAR, trang_thai CHAR, return_value OUT INT) AS
CHECK_SDT NUMBER(1);
CHECK_EMAIL NUMBER(1);
CHECK_TK NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE; 
    SELECT COUNT(MANHANVIEN) INTO CHECK_SDT FROM NHANVIEN WHERE SDT = S_DT;
    SELECT COUNT(MANHANVIEN) INTO CHECK_EMAIL FROM NHANVIEN WHERE EMAIL = E_MAIL;
    SELECT COUNT(MANHANVIEN) INTO CHECK_TK FROM NHANVIEN WHERE TAIKHOAN = TAI_KHOAN;
    IF(CHECK_SDT > 0) THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSIF(CHECK_EMAIL > 0) THEN
        RETURN_VALUE := 2;
        ROLLBACK;
    ELSIF(CHECK_TK > 0) THEN
        RETURN_VALUE := 3;
        ROLLBACK;
    ELSE
        INSERT INTO NhanVien(TenNhanVien,NgaySinh,SDT,Email,DiaChi,GioiTinh,ChucVu,CuaHang,HinhThuc,TaiKhoan,MatKhau,TrangThai)
        VALUES(ten_nv,ngay_sinh,s_dt,e_mail,dia_chi,gioi_tinh,chuc_vu,cua_hang,hinh_thuc,tai_khoan,mat_khau,trang_thai); 
        RETURN_VALUE := 0;
        COMMIT;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;
---Proc Update NhanVien---
CREATE OR REPLACE PROCEDURE Proc_Update_Nhan_Vien (ma_nhan_vien CHAR, ten_nv NVARCHAR2, ngay_sinh TIMESTAMP, s_dt CHAR, e_mail CHAR, dia_chi NVARCHAR2, gioi_tinh CHAR, chuc_vu CHAR, cua_hang CHAR, hinh_thuc CHAR, tai_khoan CHAR, mat_khau CHAR, trang_thai CHAR, return_value OUT INT) AS
CHECK_PK NUMBER(1);
CHECK_SDT NUMBER(1);
CHECK_EMAIL NUMBER(1);
CHECK_TK NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaNhanVien) INTO CHECK_PK FROM NhanVien WHERE MaNhanVien = ma_nhan_vien;
    SELECT COUNT(MANHANVIEN) INTO CHECK_SDT FROM NHANVIEN WHERE SDT = S_DT AND MaNhanVien != ma_nhan_vien;
    SELECT COUNT(MANHANVIEN) INTO CHECK_EMAIL FROM NHANVIEN WHERE EMAIL = E_MAIL AND MaNhanVien != ma_nhan_vien;
    SELECT COUNT(MANHANVIEN) INTO CHECK_TK FROM NHANVIEN WHERE TAIKHOAN = TAI_KHOAN AND MaNhanVien != ma_nhan_vien;
    IF(CHECK_SDT > 0) THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSIF(CHECK_EMAIL > 0) THEN
        RETURN_VALUE := 2;
        ROLLBACK;
    ELSIF(CHECK_TK > 0) THEN
        RETURN_VALUE := 3;
        ROLLBACK;
    ELSIF(CHECK_PK > 0) THEN
        UPDATE NhanVien SET TenNhanVien = ten_nv, NgaySinh = ngay_sinh, SDT = s_dt, Email = e_mail, DiaChi = dia_chi,GioiTinh = gioi_tinh, ChucVu = chuc_vu, CuaHang = cua_hang, HinhThuc = hinh_thuc, TaiKhoan = tai_khoan, MatKhau = mat_khau, TrangThai = trang_thai WHERE MaNhanVien = ma_nhan_vien;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 4;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

---Proc Delete NhanVien---
CREATE OR REPLACE PROCEDURE Proc_Delete_Nhan_Vien (ma_nhan_vien CHAR, return_value OUT INT) AS
CHECK_PK NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaNhanVien) INTO CHECK_PK FROM NhanVien WHERE MaNhanVien = ma_nhan_vien;
    IF(CHECK_PK > 0) THEN
        DELETE FROM NhanVien WHERE MaNhanVien = ma_nhan_vien;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 1;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

EXECUTE Proc_Insert_Cua_Hang('123 Trường Chinh','TP001',null,'6/Oct/2021');
EXECUTE Proc_Insert_Cua_Hang('500 CMT8','TP002',null,'15/Sep/2021');

EXECUTE Proc_Insert_Nhan_Vien(N'Vũ Phạm Hoài Nam','24/Oct/2000','0912452117','hoainam11134@gmail.com',N'20 Đường số 5',0,'CV001','CH001',0,'hoainam11134','123456',0);
EXECUTE Proc_Insert_Nhan_Vien(N'Nguyễn Văn A','4/Jan/2000','0911445789','nhanvien1@gmail.com',N'20/34/3 CMT8',0,'CV003','CH001',0,'ketoan1','123456',0);
EXECUTE Proc_Insert_Nhan_Vien(N'Nguyễn Vũ Bảo Huy','12/May/2000','0919558991','huyvu123@gmail.com',N'25 Tên Lửa',0,'CV006','CH001',0,'huyvu11134','123456',0);
EXECUTE Proc_Insert_Nhan_Vien(N'Huỳnh Trấn Thành','30/Aug/2000','0911052111','huynhtranthanh@gmail.com',N'1 ĐBP',0,'CV001','CH002',0,'tranthanh11134','123456',0);
EXECUTE Proc_Insert_Nhan_Vien(N'Trần Văn B','8/Jan/2000','0912499117','tranvan123b@gmail.com',N'15 Đường CC1',0,'CV003','CH002',0,'ketoan2','123456',0);
EXECUTE Proc_Insert_Nhan_Vien(N'Trần Văn C','20/Nov/1996','0998554123','mrcvippro@gmail.com',N'57/13 Đường CC1',0,'CV006','CH002',0,'truongkho2','123456',0);

EXECUTE Proc_Insert_Nhan_Vien(N'test1','20/Nov/1996','0914545875','mrcvro@gmail.com',N'57/13 Đường CC1',0,'CV006','CH002',0,'test123','123456',0);
EXECUTE Proc_Update_Nhan_Vien('NV00000007',N'test2','20/Nov/1996','0914545875','mrcvro@gmail.com',N'57/13 Đường CC1',0,'CV006','CH002',0,'test123','123456',0);
EXECUTE Proc_Delete_Nhan_Vien('NV00000007');

EXECUTE Proc_Update_Cua_Hang('CH001','123 Trường Chinh','TP001','NV00000001','6/Oct/2021');
EXECUTE Proc_Update_Cua_Hang('CH002','500 CMT8','TP002','NV00000004','15/Sep/2021');

EXECUTE Proc_Delete_Cua_Hang('CH003');

SELECT * FROM CuaHang;
SELECT * FROM NhanVien;

------------------------------------------------------------------

---Proc Insert Kho---
CREATE OR REPLACE PROCEDURE Proc_Insert_Kho (ma_cua_hang CHAR, truong_kho CHAR, dia_chi NVARCHAR2, return_value OUT INT) AS
CHECK_TRUONG_KHO_AVA NUMBER(1);
check_truong_kho NUMBER(1);
check_DC NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaNhanVien) INTO check_truong_kho FROM NhanVien WHERE MaNhanVien = truong_kho AND CuaHang = ma_cua_hang AND ChucVu = 'CV006' AND TrangThai = '0';  
    SELECT COUNT(MAKHO) INTO check_DC FROM KHO WHERE DIACHI = DIA_CHI;
    SELECT COUNT(MAKHO) INTO CHECK_TRUONG_KHO_AVA FROM KHO WHERE TRUONGKHO = TRUONG_KHO;
    IF(check_truong_kho > 0) THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSIF(CHECK_DC > 0) THEN
        RETURN_VALUE := 2;
        ROLLBACK;
    ELSIF(CHECK_TRUONG_KHO_AVA > 0) THEN  
        RETURN_VALUE := 3;
        ROLLBACK;
    ELSE
        INSERT INTO Kho(MaCuaHang,TruongKho,DiaChi)
        VALUES(ma_cua_hang, truong_kho, dia_chi);
        RETURN_VALUE := 0;
        COMMIT;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;
---Proc Update Kho---
CREATE OR REPLACE PROCEDURE Proc_Update_Kho (ma_kho CHAR, ma_cua_hang CHAR, truong_kho CHAR, dia_chi NVARCHAR2, return_value OUT INT) AS
CHECK_PK NUMBER(1);
CHECK_TRUONG_KHO_AVA NUMBER(1);
check_truong_kho NUMBER(1);
check_DC NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaKho) INTO CHECK_PK FROM Kho WHERE MaKho = ma_kho;
    SELECT COUNT(MAKHO) INTO CHECK_TRUONG_KHO_AVA FROM KHO WHERE TRUONGKHO = TRUONG_KHO AND MAKHO != MA_KHO;
    SELECT COUNT(MaNhanVien) INTO check_truong_kho FROM NhanVien WHERE MaNhanVien = truong_kho AND CuaHang = ma_cua_hang AND ChucVu = 'CV006' AND TrangThai = '0';
    SELECT COUNT(MAKHO) INTO check_DC FROM KHO WHERE DIACHI = DIA_CHI AND MAKHO != MA_KHO;
    IF(check_truong_kho > 0) THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSIF(CHECK_DC > 0) THEN
        RETURN_VALUE := 2;
        ROLLBACK;
    ELSIF(CHECK_TRUONG_KHO_AVA > 0) THEN  
        RETURN_VALUE := 3;
        ROLLBACK;
    ELSIF(CHECK_PK > 0) THEN
        UPDATE Kho SET MaCuaHang = ma_cua_hang, TruongKho = truong_kho, DiaChi = dia_chi WHERE MaKho = ma_kho;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 4;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

---Proc Delete Kho---
CREATE OR REPLACE PROCEDURE Proc_Delete_Kho (ma_kho CHAR, return_value OUT INT) AS
CHECK_PK NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaKho) INTO CHECK_PK FROM Kho WHERE MaKho = ma_kho;
    IF(CHECK_PK > 0) THEN
        DELETE FROM Kho WHERE MaKho = ma_kho;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 1;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

EXECUTE Proc_Insert_Kho('CH001','NV00000003',N'123 Trường Chinh');
EXECUTE Proc_Insert_Kho('CH002','NV00000006',N'500 CMT8');
EXECUTE Proc_Insert_Kho('CH001','NV00000003',N'600 ĐBP');
EXECUTE Proc_Insert_Kho('CH001','NV00000003',N'01 ĐBP');

EXECUTE Proc_Update_Kho('K0004','CH001','NV00000003',N'02 ĐBP');
EXECUTE Proc_Delete_Kho('K0004');
SELECT * FROM Kho;


------------------------------------------------------------------

---Proc Insert ChiTietKho---
CREATE OR REPLACE PROCEDURE Proc_Insert_ChiTiet_Kho (ma_kho CHAR, ma_san_pham CHAR, so_luong INT, return_value OUT INT) AS
BEGIN
    SET TRANSACTION READ WRITE;
    IF(so_luong < 0) THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSE
        INSERT INTO ChiTietKho(MaKho,MaSanPham,SoLuong)
        VALUES(ma_kho,ma_san_pham,so_luong);  
        RETURN_VALUE := 0;
        COMMIT;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;
---Proc Update ChiTietKho---
CREATE OR REPLACE PROCEDURE Proc_Update_ChiTiet_Kho (ma_kho CHAR, ma_san_pham CHAR, so_luong INT, return_value OUT INT) AS
CHECK_PK NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MAKHO) INTO CHECK_PK FROM CHITIETKHO WHERE MAKHO = MA_KHO AND MASANPHAM = MA_SAN_PHAM;
    IF(so_luong < 0) THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSIF(CHECK_PK > 0) THEN   
        UPDATE ChiTietKho SET SoLuong = so_luong WHERE MaKho = ma_kho AND MaSanPham = ma_san_pham;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 2;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

---Proc Delete ChiTietKho---
CREATE OR REPLACE PROCEDURE Proc_Delete_ChiTiet_Kho (ma_kho CHAR, ma_san_pham CHAR, return_value OUT INT) AS
CHECK_PK NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MAKHO) INTO CHECK_PK FROM CHITIETKHO WHERE MAKHO = MA_KHO AND MASANPHAM = MA_SAN_PHAM;
    IF(CHECK_PK > 0) THEN   
        DELETE FROM ChiTietKho WHERE MaKho = ma_kho AND MaSanPham = ma_san_pham;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 1;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

EXECUTE Proc_Insert_ChiTiet_Kho('K0001','SP00000001',10);
EXECUTE Proc_Insert_ChiTiet_Kho('K0001','SP00000002',10);
EXECUTE Proc_Insert_ChiTiet_Kho('K0001','SP00000003',10);
EXECUTE Proc_Insert_ChiTiet_Kho('K0001','SP00000004',10);
EXECUTE Proc_Insert_ChiTiet_Kho('K0001','SP00000005',10);

EXECUTE Proc_Insert_ChiTiet_Kho('K0002','SP00000001',20);
EXECUTE Proc_Insert_ChiTiet_Kho('K0002','SP00000002',20);
EXECUTE Proc_Insert_ChiTiet_Kho('K0002','SP00000003',20);
EXECUTE Proc_Insert_ChiTiet_Kho('K0002','SP00000004',20);
EXECUTE Proc_Insert_ChiTiet_Kho('K0002','SP00000005',20);


EXECUTE Proc_Insert_ChiTiet_Kho('K0003','SP00000001',10);
EXECUTE Proc_Insert_ChiTiet_Kho('K0003','SP00000002',0);
EXECUTE Proc_Insert_ChiTiet_Kho('K0003','SP00000003',0);
EXECUTE Proc_Insert_ChiTiet_Kho('K0003','SP00000004',10);
EXECUTE Proc_Insert_ChiTiet_Kho('K0003','SP00000005',0);

EXECUTE Proc_Update_ChiTiet_Kho('K0003','SP00000005',1);
EXECUTE Proc_Delete_ChiTiet_Kho('K0003','SP00000005');
SELECT * FROM ChiTietKho;


------------------------------------------------------------------

---Proc Insert PhieuNhap---
CREATE OR REPLACE PROCEDURE Proc_Insert_Phieu_Nhap (nha_cung_cap IN CHAR, nhan_vien_truc_kho IN CHAR, ma_kho IN CHAR, tong_gia_tri DECIMAL, ma_pn OUT CHAR, return_value OUT INT) AS
dem_pn NUMBER;
BEGIN
    SET TRANSACTION READ WRITE;
        SELECT COUNT(MaPhieuNhap) + 1 INTO dem_pn FROM PhieuNhap;
        INSERT INTO PhieuNhap(MaPhieuNhap,NhaCungCap,NhanVienTrucKho,MaKho,ThoiGianTao,TongGiaTri,TrangThai)
        VALUES(TO_CHAR(dem_pn),nha_cung_cap,nhan_vien_truc_kho,ma_kho,CURRENT_DATE,tong_gia_tri,0);
        SELECT MaPhieuNhap INTO ma_pn FROM PhieuNhap ORDER BY MaPhieuNhap DESC FETCH FIRST 1 ROW ONLY;
        RETURN_VALUE := 0;
        COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

CREATE OR REPLACE PROCEDURE Proc_Insert_ChiTiet_Phieu_Nhap (ma_phieu_nhap IN CHAR, ma_san_pham IN CHAR, so_luong INT, don_gia_nhap DECIMAL, return_value OUT INT) AS
BEGIN
    SET TRANSACTION READ WRITE;
    IF(SO_LUONG > 0 AND DON_GIA_NHAP > 0) THEN
        INSERT INTO ChiTietPhieuNhap(MaPhieuNhap,MaSanPham,SoLuong,DonGiaNhap)
        VALUES(ma_phieu_nhap,ma_san_pham,so_luong,don_gia_nhap);
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 1;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

DECLARE 
ma_pn CHAR(10);
BEGIN
    Proc_Insert_Phieu_Nhap('CC001','NV00000002','K0001',365000000,ma_pn);
    Proc_Insert_ChiTiet_Phieu_Nhap(ma_pn,'SP00000001',5,5000000);
    Proc_Insert_ChiTiet_Phieu_Nhap(ma_pn,'SP00000002',5,25000000);
    Proc_Insert_ChiTiet_Phieu_Nhap(ma_pn,'SP00000003',5,20000000);
    Proc_Insert_ChiTiet_Phieu_Nhap(ma_pn,'SP00000004',5,8000000);
    Proc_Insert_ChiTiet_Phieu_Nhap(ma_pn,'SP00000005',5,15000000);
END;
SELECT * FROM PhieuNhap;
SELECT * FROM ChiTietPhieuNhap;


------------------------------------------------------------------

---Proc Insert Dang Ky Khach Hang---
CREATE OR REPLACE PROCEDURE Proc_Dang_Ky_Khach_Hang (ten_khach_hang CHAR, s_dt CHAR, dia_chi CHAR, thanh_pho CHAR, e_mail CHAR, tai_khoan char, mat_khau char, return_value OUT INT) AS
check_sdt NUMBER(1);
check_email NUMBER(1);
check_tk NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaKhachHang) INTO check_sdt FROM KhachHang WHERE SDT = s_dt;
    SELECT COUNT(MaKhachHang) INTO check_email FROM KhachHang WHERE EMAIL = e_mail;
    SELECT COUNT(MaKhachHang) INTO check_tk FROM KhachHang WHERE TAIKHOAN = tai_khoan;
    IF(check_sdt > 0) THEN
        return_value := 1;
        ROLLBACK;
    ELSIF(check_email > 0) THEN
        return_value := 2;
        ROLLBACK;
    ELSIF(check_tk > 0) THEN
        return_value := 3;
        ROLLBACK;
    ELSE
        INSERT INTO KhachHang(TenKhachHang,SDT,DiaChi,ThanhPho,Email,TaiKhoan,MatKhau,TrangThai) VALUES(ten_khach_hang,s_dt,dia_chi,thanh_pho,e_mail,tai_khoan,mat_khau,1);
        return_value := 0;
        COMMIT;    
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

DECLARE
return1 INT;
BEGIN
/*
Proc_Dang_Ky_Khach_Hang('Phan Hữu Đăng','0909119459','50 Thành Thái','TP001','phanhuudang@gmail.com','phanhuudang','123456',return1);
IF(return1 = 0) THEN
    DBMS_OUTPUT.put_line('Dang ky thanh cong, da xac nhan');
    ELSE
    DBMS_OUTPUT.put_line('Dang ky thanh cong');
END IF;
*/
Proc_Dang_Ky_Khach_Hang('Trần Văn C','0999111454','54/23/4 Nguyễn Oanh','TP002','tranvanc@gmail.com','khachhang2','123456',return1);
IF(return1 = 0) THEN
    DBMS_OUTPUT.put_line('Dang ky thanh cong, da xac nhan');
    ELSE
    DBMS_OUTPUT.put_line('Dang ky thanh cong');
END IF;
END;


SELECT * FROM KhachHang;


---Proc Insert Dang Nhap---
CREATE OR REPLACE PROCEDURE Proc_Dang_Nhap (tai_khoan CHAR, mat_khau CHAR, LOAI INT, return_value OUT INT, return_id OUT CHAR) AS
check_tk NUMBER(1);
check_mk CHAR(50);
BEGIN
    IF(LOAI = 0) THEN
        SELECT COUNT(MaKhachHang) INTO check_tk FROM KhachHang WHERE TAIKHOAN = tai_khoan;
        IF(check_tk > 0) THEN
            SELECT MatKhau INTO check_mk FROM KhachHang WHERE TaiKhoan = tai_khoan;
            IF(check_mk = mat_khau) THEN
                return_value := 0;
                SELECT MaKhachHang INTO return_id FROM KhachHang WHERE TaiKhoan = tai_khoan;
            ELSE
                return_value := 2;
                return_id := NULL;
            END IF;
        ELSE
            return_value := 1;
            return_id := NULL;
        END IF;
    ELSIF(LOAI = 1) THEN
        SELECT COUNT(MANHANVIEN) INTO check_tk FROM NHANVIEN WHERE TAIKHOAN = tai_khoan;
        IF(check_tk > 0) THEN
            SELECT MatKhau INTO check_mk FROM NHANVIEN WHERE TaiKhoan = tai_khoan;
            IF(check_mk = mat_khau) THEN
                return_value := 0;
                SELECT MANHANVIEN INTO return_id FROM NHANVIEN WHERE TaiKhoan = tai_khoan;
            ELSE
                return_value := 2;
                return_id := NULL;
            END IF;
        ELSE
            return_value := 1;
            return_id := NULL;
        END IF;
    ELSE
        RETURN_VALUE := 3;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

DECLARE 
return INT;
return_id CHAR(10);
BEGIN
    Proc_Dang_Nhap('phanhuudang','123456',0,return,return_id);
    IF(return = 0)THEN
        DBMS_OUTPUT.put_line('Dang nhap thanh cong');
        DBMS_OUTPUT.put_line(return_id);
    END IF;
END;

---Proc Update thong tin khach hang---
CREATE OR REPLACE PROCEDURE Proc_Update_Khach_Hang (ma_khach_hang CHAR,ten_khach_hang NVARCHAR2, s_dt CHAR, dia_chi NVARCHAR2, thanh_pho CHAR, e_mail CHAR, return_value OUT INT) AS
check_sdt NUMBER(1);
check_email NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaKhachHang) INTO check_sdt FROM KhachHang WHERE SDT = s_dt AND MAKHACHHANG != MA_KHACH_HANG;
    SELECT COUNT(MaKhachHang) INTO check_email FROM KhachHang WHERE EMAIL = e_mail AND MAKHACHHANG != MA_KHACH_HANG;
    IF(check_sdt > 0) THEN
        return_value := 1;
        ROLLBACK;
    ELSIF(check_email > 0) THEN
        return_value := 2;
        ROLLBACK;
    ELSE
        UPDATE KhachHang SET TenKhachHang = ten_khach_hang, SDT = s_dt, DiaChi = dia_chi, ThanhPho = thanh_pho, Email = e_mail WHERE MaKhachHang = ma_khach_hang;
        return_value := 0;
        COMMIT;    
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

DECLARE 
return1 INT;
BEGIN
    Proc_Update_Khach_Hang('KH00000001','Phan Hữu Đăng','0909119459','51 Thành Thái','TP001','phanhuudang@gmail.com',return1);
    
    IF(return1 = 0)THEN
        DBMS_OUTPUT.put_line('Cap nhat thong tin thanh cong');
    ELSE IF(return1 = 1)THEN
        DBMS_OUTPUT.put_line('SDT da duoc su dung');
    ELSE
        DBMS_OUTPUT.put_line('Email da duoc su dung');END IF;
    END IF;
END;
SELECT * FROM KHACHHANG;


---Proc doi mat khau---
CREATE OR REPLACE PROCEDURE Proc_Doi_Mat_Khau (E_MAIL CHAR, LOAI INT, mat_khau_moi CHAR, return_value OUT INT) AS
check_email NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    IF(LOAI = 0) THEN
        SELECT COUNT(MAKHACHHANG) INTO check_email FROM KhachHang WHERE EMAIL = E_MAIL;
        IF(check_email > 0) THEN  
            UPDATE KhachHang SET MatKhau = mat_khau_moi WHERE EMAIL = E_MAIL;
            return_value := 0;
            COMMIT;    
        ELSE
            return_value := 1;
            ROLLBACK;
        END IF;
    ELSIF(LOAI = 1) THEN
        SELECT COUNT(MANHANVIEN) INTO check_email FROM NHANVIEN WHERE EMAIL = E_MAIL;
        IF(check_email > 0) THEN  
            UPDATE NHANVIEN SET MatKhau = mat_khau_moi WHERE EMAIL = E_MAIL;
            return_value := 0;
            COMMIT;    
        ELSE
            return_value := 1;
            ROLLBACK;
        END IF;
    ELSE
        return_value := 2;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

DECLARE 
return1 INT;
BEGIN
    Proc_Doi_Mat_Khau_Khach_Hang('KH00000001','12345679','123456',return1);
    IF(return1 = 0)THEN
        DBMS_OUTPUT.put_line('Doi mat khau thanh cong');
    ELSE 
        DBMS_OUTPUT.put_line('Mat khau cu sai');
    END IF;
END;
SELECT * FROM KHACHHANG;

---Proc check_email---
CREATE OR REPLACE PROCEDURE Proc_Kiem_Tra_Email_Khach_Hang (e_mail CHAR, return_value OUT INT) AS
check_email NUMBER(1);
BEGIN
    SELECT Count(MaKhachHang) INTO check_email FROM KhachHang WHERE Email = e_mail;
    IF(check_email > 0) THEN  
        return_value := 0; 
    ELSE
        return_value := 1;
    END IF;
END;

DECLARE 
return1 INT;
BEGIN
    Proc_Kiem_Tra_Email_Khach_Hang('phanhuudang@gmail.com',return1);
    IF(return1 = 0)THEN
        DBMS_OUTPUT.put_line('Co');
    ELSE 
        DBMS_OUTPUT.put_line('khong');
    END IF;
END;
SELECT * FROM KHACHHANG;



------------------------------------------------------------------

---Proc Insert Voucher---
CREATE OR REPLACE PROCEDURE Proc_Insert_Voucher (ma_voucher CHAR, ten_voucher NVARCHAR2, phan_tram_khuyen_mai FLOAT, ngay_bat_dau TIMESTAMP, ngay_ket_thuc TIMESTAMP, mo_ta NVARCHAR2, return_value OUT INT) AS
check_vc NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaVoucher) INTO check_vc FROM VOUCHER WHERE MaVoucher = ma_voucher;
    IF(check_vc > 0) THEN  
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSIF(NGAY_BAT_DAU > NGAY_KET_THUC) THEN
        RETURN_VALUE := 2;
        ROLLBACK;
    ELSE
        INSERT INTO Voucher(MaVoucher , TenVoucher, PhanTramKhuyenMai, NgayBatDau, NgayKetThuc, MoTa)
        VALUES(ma_voucher, ten_voucher, phan_tram_khuyen_mai, ngay_bat_dau, ngay_ket_thuc, mo_ta);  
        RETURN_VALUE := 0;
        COMMIT;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;
---Proc Update Voucher---
CREATE OR REPLACE PROCEDURE Proc_Update_Voucher (ma_voucher CHAR, ten_voucher NVARCHAR2, phan_tram_khuyen_mai FLOAT, ngay_bat_dau TIMESTAMP, ngay_ket_thuc TIMESTAMP, mo_ta NVARCHAR2, return_value OUT INT) AS
check_vc NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaVoucher) INTO check_vc FROM VOUCHER WHERE MaVoucher = ma_voucher;
    IF(NGAY_BAT_DAU > NGAY_KET_THUC) THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSIF(check_vc > 0) THEN  
        UPDATE Voucher SET TenVoucher =  ten_voucher, PhanTramKhuyenMai = phan_tram_khuyen_mai, NgayBatDau = ngay_bat_dau, NgayKetThuc = ngay_ket_thuc, MoTa = mo_ta WHERE MaVoucher = ma_voucher;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 2;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

---Proc Delete Voucher---
CREATE OR REPLACE PROCEDURE Proc_Delete_Voucher (ma_voucher CHAR, return_value OUT INT) AS
check_vc NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaVoucher) INTO check_vc FROM VOUCHER WHERE MaVoucher = ma_voucher;
    IF(check_vc > 0) THEN
        DELETE FROM Voucher WHERE MaVoucher = ma_voucher;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 1;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

EXECUTE Proc_Insert_Voucher('HAPPY2021','Voucher 2021',0.1,'1/Jan/2021','30/Dec/2021','Voucher 10% áp dụng năm 2021');
EXECUTE Proc_Update_Voucher('HAPPY2021','Voucher năm 2021',0.1,'1/Jan/2021','30/Dec/2021','Voucher 10% áp dụng năm 2021');
EXECUTE Proc_Delete_Voucher('HAPPY2021');
SELECT * FROM Voucher;


---Proc Gui Phan Hoi---
CREATE OR REPLACE PROCEDURE Proc_Gui_Phan_Hoi (ma_khach_hang CHAR, noi_dung NVARCHAR2, return_value OUT INT) AS
check_ph NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaPhanHoi) INTO check_ph FROM PhanHoi WHERE MaKhachHang = ma_khach_hang AND TrangThai = '1';
    IF(check_ph > 4) THEN  
        return_value := 1;
        ROLLBACK;
    ELSE
        INSERT INTO PhanHoi(MaKhachHang, NoiDung, TrangThai)
        VALUES(ma_khach_hang, noi_dung,1);    
        return_value := 0;
        COMMIT;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;
---Proc Xu Ly Phan Hoi---
CREATE OR REPLACE PROCEDURE Proc_Xu_Ly_Phan_Hoi (ma_phan_hoi CHAR, return_value OUT INT) AS
check_ph NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaPhanHoi) INTO check_ph FROM PhanHoi WHERE MaPhanHoi = ma_phan_hoi;
    IF(check_ph > 0) THEN  
        UPDATE Phanhoi SET TrangThai = 0 WHERE MaPhanHoi = ma_phan_hoi;
        return_value := 0;
        COMMIT;
    ELSE
        return_value := 1;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

DECLARE 
return1 INT;
BEGIN
    Proc_Gui_Phan_Hoi('KH00000001','Hàng tốt vl',return1);
    IF(return1 = 0)THEN
        DBMS_OUTPUT.put_line('Tao thanh cong');
    ELSE 
        DBMS_OUTPUT.put_line('Tao that bai');
    END IF;
END;

DECLARE 
return1 INT;
BEGIN
    Proc_Xu_Ly_Phan_Hoi('PH00000001',return1);
    IF(return1 = 0)THEN
        DBMS_OUTPUT.put_line('Xu ly thanh cong');
    ELSE 
        DBMS_OUTPUT.put_line('Xu ly that bai, ma phan hoi khong ton tai');
    END IF;
END;
SELECT * FROM PhanHoi;

------------------------------------------------------------------

---Proc Insert HangTichDiem---
CREATE OR REPLACE PROCEDURE Proc_Insert_Hang_Tich_Diem (ten_hang NVARCHAR2, return_value OUT INT) AS
CHECK_TEN NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaHang) INTO CHECK_TEN FROM HangTichDiem WHERE Tenhang = ten_hang;
    IF(CHECK_TEN > 0) THEN  
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSE
        INSERT INTO HangTichDiem(TenHang)
        VALUES(ten_hang);
        RETURN_VALUE := 0;
        COMMIT;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;
---Proc Update HangTichDiem---
CREATE OR REPLACE PROCEDURE Proc_Update_Hang_Tich_Diem (ma_hang CHAR, ten_hang NVARCHAR2, return_value OUT INT) AS
CHECK_TEN NUMBER(1);
CHECK_PK NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaHang) INTO CHECK_TEN FROM HangTichDiem WHERE TENHANG = ten_hang AND MAHANG != MA_HANG;
    SELECT COUNT(MaHang) INTO CHECK_PK FROM HangTichDiem WHERE MaHang = ma_hang;
    IF(CHECK_TEN > 0) THEN
        RETURN_VALUE := 1;
        ROLLBACK;
    ELSIF(CHECK_PK > 0) THEN  
        UPDATE HangTichDiem SET TenHang =  ten_hang WHERE MaHang = ma_hang;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 2;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

---Proc Delete HangTichDiem---
CREATE OR REPLACE PROCEDURE Proc_Delete_Hang_Tich_Diem (ma_hang CHAR, return_value OUT INT) AS
check_hang NUMBER(1);
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaHang) INTO check_hang FROM HangTichDiem WHERE MaHang = ma_hang;
    IF(check_hang > 0) THEN
        DELETE FROM HangTichDiem WHERE MaHang = ma_hang;
        RETURN_VALUE := 0;
        COMMIT;
    ELSE
        RETURN_VALUE := 1;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

EXECUTE Proc_Insert_Hang_Tich_Diem('Đồng');
EXECUTE Proc_Insert_Hang_Tich_Diem('Bạc');
EXECUTE Proc_Insert_Hang_Tich_Diem('Vàng');
EXECUTE Proc_Insert_Hang_Tich_Diem('Kim Cương');
EXECUTE Proc_Insert_Hang_Tich_Diem('test');

EXECUTE Proc_Update_Hang_Tich_Diem('H0005','test2');
EXECUTE Proc_Delete_Hang_Tich_Diem('H0005');

SELECT * FROM HangTichDiem;




CREATE OR REPLACE PROCEDURE Proc_Tao_The_Cho_Khach_Hang (ma_khach_hang CHAR, return_value OUT INT) AS
check_kh NUMBER;
dem_the NUMBER;
BEGIN
    SET TRANSACTION READ WRITE;
    SELECT COUNT(MaKhachHang) INTO check_kh FROM KhachHang WHERE MaKhachHang = ma_khach_hang;
    IF(check_kh > 0) THEN
        SELECT COUNT(MaThe) INTO dem_the FROM TheTichDiem WHERE MaKhachHang = ma_khach_hang;
        IF(dem_the > 0) THEN 
            return_value := 1;
            ROLLBACK;
        ELSE
            INSERT INTO TheTichDiem(MaThe,MaKhachHang,Hang,NgayTao,Diem,TrangThai) VALUES('1',ma_khach_hang,'H0001',CURRENT_DATE,0,0);
            return_value := 0;
            COMMIT;
        END IF;
    ELSE
        return_value := 2;
        ROLLBACK;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;


DECLARE 
return1 INT;
BEGIN
    Proc_Tao_The_Cho_Khach_Hang('KH00000001',return1);
    IF(return1 = 0)THEN
        DBMS_OUTPUT.put_line('Xu ly thanh cong');
    ELSIF(return1 = 1)THEN
        DBMS_OUTPUT.put_line('Xu ly that bai, khach hang da co the');
    ELSE
        DBMS_OUTPUT.put_line('Xu ly that bai, ma khach hang khong ton tai');
    END IF;
END;
SELECT * FROM TheTichDiem;

---Proc tạo đơn hàng online---
CREATE OR REPLACE PROCEDURE Proc_Tao_Don_Hang (ma_khach_hang IN CHAR, MA_CUA_HANG CHAR, ma_voucher IN CHAR, tong_gia_tri_don IN DECIMAL, ma_don OUT CHAR, return_value OUT INT) IS
check_kh NUMBER;
ngay_bd TIMESTAMP;
ngay_kt TIMESTAMP;
DEMDH NUMBER;
ID CHAR(10);
CHUOISOKHONG VARCHAR(8) := '0';
I NUMBER := 0;
DEMID NUMBER;
LENGTHID NUMBER;
   BEGIN
    ---if input is not null
    IF ma_khach_hang IS NOT NULL AND MA_CUA_HANG IS NOT NULL AND tong_gia_tri_don IS NOT NULL THEN
        ---check ma khach hang
        SELECT COUNT(MaKhachHang) INTO check_kh FROM KhachHang WHERE MaKhachHang = ma_khach_hang;
        ---neu ma khach hang khong ton tai
        IF(check_kh = 0) THEN
            RETURN_VALUE := 3;
        ---neu co voucher
        ELSIF ma_voucher IS NOT NULL THEN
            SELECT NgayBatDau INTO ngay_bd FROM VOUCHER WHERE MaVoucher = ma_voucher;
            SELECT NgayKetThuc INTO ngay_kt FROM VOUCHER WHERE MaVoucher = ma_voucher;
            ---kiem tra voucher con date khong
            IF (ngay_bd > CURRENT_DATE OR ngay_kt < CURRENT_DATE) THEN
                RETURN_VALUE := 2;
            END IF;---end check date voucher
        END IF;
        
        IF(RETURN_VALUE > 0)THEN
            MA_DON := NULL;
        ELSE
            SET TRANSACTION READ WRITE;
            SELECT COUNT(MaDonHang)INTO DEMDH FROM DonHang;
            DEMDH := DEMDH +  1;
            LENGTHID := (10 - ((LENGTH(DEMDH) + LENGTH('DH'))));
            WHILE(I < LENGTHID - 1)
            LOOP
                CHUOISOKHONG := CONCAT(CHUOISOKHONG,'0');
                I := I + 1;
            END LOOP;
            ID := CONCAT('DH',CHUOISOKHONG||DEMDH);
            SELECT COUNT(MaDonHang) INTO DEMID FROM DonHang WHERE MaDonHang = ID;
            WHILE(DEMID <> 0)
            LOOP
                DEMDH := DEMDH + 1;
                CHUOISOKHONG := '0';
                I := 0;
                LENGTHID := 10 - ((LENGTH(DEMDH) + LENGTH('DH')));
                WHILE (I < LENGTHID - 1)
                LOOP
                     CHUOISOKHONG := CONCAT(CHUOISOKHONG,'0');
                    I := I + 1;
                END LOOP;
                ID := CONCAT('DH',CHUOISOKHONG||DEMDH);
                SELECT COUNT(MaDonHang) INTO DEMID FROM DonHang WHERE MaDonHang = ID;
            END LOOP;
            INSERT INTO DonHang(MaDonHang,NhanVienPhuTrach,MaKhachHang,MaCuaHang,ThoiGianTao,MaVoucher,Loai,TinhTrangXacNhan,TinhTrangThanhToan,TinhTrangGiaoHang,TongGiaTri)
            VALUES(ID,null,ma_khach_hang,ma_cua_hang,CURRENT_DATE,ma_voucher,0,null,null,null,tong_gia_tri_don);
            ma_don := ID;
            RETURN_VALUE := 0;
            COMMIT;
        END IF;      
    ELSE
        RETURN_VALUE := 1;
    END IF;---end neu input not null
    EXCEPTION
        WHEN OTHERS THEN 
        RETURN_VALUE := -1; 
   END;



---THEM CHI TIET DON HANG
CREATE OR REPLACE PROCEDURE Proc_Them_Chi_Tiet_Don_Hang (ma_don_hang IN CHAR, MA_SAN_PHAM CHAR, SO_LUONG IN INT, DON_GIA IN DECIMAL, THANH_TIEN IN DECIMAL, return_value OUT INT) IS
BEGIN
    INSERT INTO ChiTietDonHang(MaDonHang,MaSanPham,SoLuong,DonGia,ThanhTien)VALUES(MA_DON_HANG,MA_SAN_PHAM,SO_LUONG,DON_GIA,THANH_TIEN);
    COMMIT;
    RETURN_VALUE := 0;
    EXCEPTION 
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

DECLARE
madh1 CHAR(10);
madh2 CHAR(10);
madh3 CHAR(10);
BEGIN
    Proc_Tao_Don_Hang_Online('KH00000001','HAPPY2021',38052000,madh1); 
    DBMS_OUTPUT.put_line(madh1);
    Proc_Tao_Don_Hang_Online('KH00000001',NULL,12990000,madh2);
    DBMS_OUTPUT.put_line(madh2);
    Proc_Tao_Don_Hang_Online('KH00000002',NULL,37990000,madh3); 
    DBMS_OUTPUT.put_line(madh3);
    INSERT INTO ChiTietDonHang(MaDonHang,MaSanPham,SoLuong,DonGia,ThanhTien)VALUES(madh1,'SP00000001',2,12990000.00,25980000);
    INSERT INTO ChiTietDonHang(MaDonHang,MaSanPham,SoLuong,DonGia,ThanhTien) VALUES(madh1,'SP00000004',1,16300000,16300000);
    INSERT INTO ChiTietDonHang(MaDonHang,MaSanPham,SoLuong,DonGia,ThanhTien) VALUES(madh2,'SP00000001',1,12990000,12990000);
    INSERT INTO ChiTietDonHang(MaDonHang,MaSanPham,SoLuong,DonGia,ThanhTien)VALUES(madh3,'SP00000002',1,37990000,37990000);
END;

SELECT * FROM DonHang;
SELECT * FROM ChiTietDonHang;
DELETE FROM ChiTietDonHang;
SELECT * FROM KhachHang;
DELETE FROM DonHang;
COMMIT;


---Proc xác nhận đơn hàng---
CREATE OR REPLACE PROCEDURE Proc_Xac_Nhan_Don_Hang (ma_don_hang IN CHAR, ma_nhan_vien IN CHAR, tinh_trang_xac_nhan IN CHAR, return_value OUT INT) IS
tinh_trang_hien_tai CHAR(1);
   BEGIN
        SET TRANSACTION READ WRITE;
            ---kiem tra tinh trang hien tai
            SELECT TinhTrangXacNhan INTO tinh_trang_hien_tai FROM DonHang WHERE MaDonHang = ma_don_hang;
            ---neu tinh trang xac nhan input la true
            IF(tinh_trang_hien_tai IS NULL AND ma_don_hang IS NOT NULL AND ma_nhan_vien IS NOT NULL and tinh_trang_xac_nhan = '0') THEN
                UPDATE DonHang SET TinhTrangXacNhan = tinh_trang_xac_nhan, NhanVienPhuTrach = ma_nhan_vien WHERE MaDonHang = ma_don_hang;
                RETURN_VALUE := 0;
                COMMIT;
                ---neu tinh trang xac nhan input la false
            ELSIF(tinh_trang_hien_tai IS NULL AND ma_don_hang IS NOT NULL AND ma_nhan_vien IS NOT NULL and tinh_trang_xac_nhan = '1') THEN
                UPDATE DonHang SET TinhTrangXacNhan = tinh_trang_xac_nhan, TinhTrangThanhToan = tinh_trang_xac_nhan, 
                TinhTrangGiaoHang = tinh_trang_xac_nhan, NhanVienPhuTrach = ma_nhan_vien WHERE MaDonHang = ma_don_hang;
                RETURN_VALUE := 0;
                COMMIT;
            ELSE
                RETURN_VALUE := 1;
                ROLLBACK;
            END IF;---end kiem tra
        EXCEPTION
            WHEN OTHERS THEN
            RETURN_VALUE := -1;
   END;
EXECUTE Proc_Xac_Nhan_Don_Hang('DH00000001','NV00000001',0);
EXECUTE Proc_Xac_Nhan_Don_Hang('DH00000003','NV00000001',0);
SELECT * FROM DonHang WHERE MaDonHang = 'DH00000001';
UPDATE DonHang SET TinhTrangXacNhan = NULL, TinhTrangThanhToan = NULL, 
                    TinhTrangGiaoHang = NULL, NhanVienPhuTrach = NULL WHERE MaDonHang = 'DH00000001';

---Proc thanh toán đơn hàng---
CREATE OR REPLACE PROCEDURE Proc_Thanh_Toan_Don_Hang (ma_don_hang IN CHAR, ma_nhan_vien IN CHAR, tinh_trang_thanh_toan IN CHAR, return_value OUT INT) IS
tinh_trang_hien_tai CHAR(1);
   BEGIN
        SET TRANSACTION READ WRITE;
            ---kiem tra tinh trang hien tai
            SELECT TinhTrangThanhToan INTO tinh_trang_hien_tai FROM DonHang WHERE MaDonHang = ma_don_hang;
            ---neu tinh trang xac nhan input la true
            IF(tinh_trang_hien_tai IS NULL AND ma_don_hang IS NOT NULL AND ma_nhan_vien IS NOT NULL and tinh_trang_thanh_toan = '0') THEN
                UPDATE DonHang SET TinhTrangThanhToan = tinh_trang_thanh_toan, NhanVienPhuTrach = ma_nhan_vien WHERE MaDonHang = ma_don_hang;
                RETURN_VALUE := 0;
                COMMIT;
                ---neu tinh trang xac nhan input la false
            ELSIF(tinh_trang_hien_tai IS NULL AND ma_don_hang IS NOT NULL AND ma_nhan_vien IS NOT NULL and tinh_trang_thanh_toan = '1') THEN
                UPDATE DonHang SET TinhTrangThanhToan = tinh_trang_thanh_toan, 
                TinhTrangGiaoHang = tinh_trang_thanh_toan, NhanVienPhuTrach = ma_nhan_vien WHERE MaDonHang = ma_don_hang;
                RETURN_VALUE := 0;
                COMMIT;
            ELSE
                RETURN_VALUE := 1;
                ROLLBACK;
            END IF;---end kiem tra
        EXCEPTION
            WHEN OTHERS THEN
            RETURN_VALUE := -1;
   END;
   
EXECUTE Proc_Thanh_Toan_Don_Hang('DH00000001','NV00000001',0);
EXECUTE Proc_Thanh_Toan_Don_Hang('DH00000003','NV00000001',0);
SELECT * FROM DonHang WHERE MaDonHang = 'DH00000001';
UPDATE DonHang SET TinhTrangThanhToan = NULL, TinhTrangGiaoHang = NULL, NhanVienPhuTrach = NULL WHERE MaDonHang = 'DH00000001';
COMMIT;

---Proc xuất kho---
CREATE OR REPLACE PROCEDURE Proc_Xuat_Phieu_Xuat_Va_Bao_Hanh (nhan_vien_tao_phieu IN CHAR, ma_don_hang IN CHAR, return_value OUT INT) IS
---declare bien kiem tra
CHECK_TINH_TRANG NUMBER(1);
check_phieu NUMBER := 0;
ma_cua_hang CHAR(5);
count_kho NUMBER;
---declare flag
flag_stop_cursor NUMBER := 1;
flag_commit NUMBER := 1;
---declare bien tam chi tiet kho
dem NUMBER;
dem_px NUMBER := -1;
ma_sp CHAR(10);
sl NUMBER;
check_sl NUMBER;
---declare ma
ma_kho CHAR(5);
truong_kho CHAR(10);
ma_px CHAR(10);
ma_khach_hang CHAR(10);
---declare cursor
c_dh_sp CHAR(10); 
c_dh_sl NUMBER; 
c_dh_dongia DECIMAL;
CURSOR c_ctdh is SELECT MaSanPham, SoLuong, DonGia FROM ChiTietDonHang WHERE MaDonHang = ma_don_hang;
---declare cursor
c_dh_sp2 CHAR(10); 
c_dh_sl2 NUMBER; 
CURSOR c_ctdh2 is SELECT MaSanPham, SoLuong FROM ChiTietDonHang WHERE MaDonHang = ma_don_hang;
BEGIN
    ---kiem tra input
    IF NHAN_VIEN_TAO_PHIEU IS NOT NULL AND MA_DON_HANG IS NOT NULL THEN
        SET TRANSACTION READ WRITE;
            SELECT COUNT(MADONHANG) INTO CHECK_TINH_TRANG FROM DONHANG WHERE MADONHANG = MA_DON_HANG AND TINHTRANGXACNHAN = 0 AND TINHTRANGTHANHTOAN = 0;
            IF(CHECK_TINH_TRANG > 0) THEN
                SELECT COUNT (MaPhieuXuat) INTO CHECK_PHIEU FROM PhieuXuat where MaDonHang = ma_don_hang;
                IF(CHECK_PHIEU > 0) THEN
                    RETURN_VALUE := 3;
                ELSE    
                    ---lay ma cua hang
                    SELECT MaCuaHang INTO ma_cua_hang FROM DonHang WHERE MaDonHang = ma_don_hang;
                    ---dem xem cua hang co may kho
                    SELECT COUNT(MaKho) INTO count_kho FROM Kho WHERE MaCuaHang = ma_cua_hang;
                    ---mo cursor duyet tung san pham trong don hang
                    OPEN c_ctdh; 
                    LOOP 
                    FETCH c_ctdh into c_dh_sp, c_dh_sl, c_dh_dongia; 
                        EXIT WHEN c_ctdh%notfound OR flag_stop_cursor = 0;                  
                        ---voi moi san pham trong don hang
                        ---duyet tung kho
                        dem := 1;
                            WHILE dem <= count_kho
                            LOOP        
                                SELECT MaKho INTO ma_kho FROM (SELECT ROWNUM AS STT, k.MaKho FROM Kho k WHERE k.MaCuaHang = ma_cua_hang) WHERE STT = dem;
                                SELECT COUNT(SoLuong) INTO check_sl FROM ChiTietKho WHERE MaKho = ma_kho AND MaSanPham = c_dh_sp;
                                IF check_sl = 0 THEN
                                    --khong lam gi ca, kiem tra kho tiep theo
                                    dem := dem + 1;
                                    ELSE--- neu so luong > 0(kho nay co san pham do)
                                    ---lay so luong ra kiem tra
                                    SELECT SoLuong INTO sl FROM ChiTietKho WHERE MaKho = ma_kho AND MaSanPham = c_dh_sp;
                                    IF(c_dh_sl <= sl) THEN---neu so luong trong kho du thi
                                        ---kiem tra xem co phieu xuat cho kho nay o don hang nay chua
                                        SELECT COUNT (MaPhieuXuat) INTO check_phieu FROM PhieuXuat where MaDonHang = ma_don_hang and MaKho = ma_kho;
                                        SELECT TruongKho INTO truong_kho FROM Kho WHERE MaKho = ma_kho;
                                        IF check_phieu = 0 THEN---chua co phieu thi 
                                            ---dem px
                                            IF dem_px = -1 THEN SELECT COUNT(MaPhieuXuat) + 1 INTO dem_px FROM PhieuXuat;
                                            ELSE
                                                dem_px := dem_px + 1;
                                            END IF;---end dem px
                                            INSERT INTO PhieuXuat(MaPhieuXuat,NhanVienTaoPhieu,NhanVienTruongKho,MaKho,MaDonHang,ThoiGianTao,TongGiaTri,TrangThai) 
                                            VALUES(TO_CHAR(dem_px),nhan_vien_tao_phieu,truong_kho,ma_kho,ma_don_hang,CURRENT_DATE,0,0);
                                            UPDATE ChiTietKho SET SoLuong = SoLuong - c_dh_sl WHERE MaKho = ma_kho AND MaSanPham = c_dh_sp;                                  
                                            SELECT MaPhieuXuat INTO ma_px FROM PhieuXuat WHERE MaDonHang = ma_don_hang AND MaKho = ma_kho;
                                            INSERT INTO ChiTietPhieuXuat(MaPhieuXuat,MaSanPham,SoLuong)VALUES(ma_px,c_dh_sp,c_dh_sl);
                                            UPDATE PhieuXuat SET TongGiaTri = TongGiaTri + (c_dh_sl * c_dh_dongia) WHERE MaPhieuXuat = ma_px;
                                            c_dh_sl := 0;
                                        ELSE
                                            SELECT MaPhieuXuat INTO ma_px FROM PhieuXuat WHERE MaDonHang = ma_don_hang AND MaKho = ma_kho;
                                            UPDATE ChiTietKho SET SoLuong = SoLuong - c_dh_sl WHERE MaKho = ma_kho AND MaSanPham = c_dh_sp;    
                                            INSERT INTO ChiTietPhieuXuat(MaPhieuXuat,MaSanPham,SoLuong)VALUES(ma_px,c_dh_sp,c_dh_sl);
                                            UPDATE PhieuXuat SET TongGiaTri = TongGiaTri + (c_dh_sl * c_dh_dongia) WHERE MaPhieuXuat = ma_px;
                                            c_dh_sl := 0;
                                        END IF; ---end check phieu
                                        dem := count_kho;
                                    ELSE---neu so luong trong kho khong du thi
                                        ---van kiem tra nhu tren
                                        ---kiem tra xem co phieu xuat cho kho nay o don hang nay chua
                                        SELECT COUNT (MaPhieuXuat) INTO check_phieu FROM PhieuXuat where MaDonHang = ma_don_hang and MaKho = ma_kho;
                                        SELECT TruongKho INTO truong_kho FROM Kho WHERE MaKho = ma_kho;
                                        IF check_phieu = 0 THEN---chua co phieu thi 
                                            IF dem_px = -1 THEN SELECT COUNT(MaPhieuXuat) + 1 INTO dem_px FROM PhieuXuat;
                                            ELSE
                                                dem_px := dem_px + 1;
                                            END IF;---end dem px
                                            INSERT INTO PhieuXuat(MaPhieuXuat,NhanVienTaoPhieu,NhanVienTruongKho,MaKho,MaDonHang,ThoiGianTao,TongGiaTri,TrangThai) 
                                            VALUES(TO_CHAR(dem_px),nhan_vien_tao_phieu,truong_kho,ma_kho,ma_don_hang,CURRENT_DATE,0,0);
                                            ---Cap nhat lai so luong con thieu
                                            c_dh_sl := c_dh_sl - sl;
                                            ---Cap nhat lai so luong kho = 0
                                            UPDATE ChiTietKho SET SoLuong = 0 WHERE MaKho = ma_kho AND MaSanPham = c_dh_sp;                                      
                                            SELECT MaPhieuXuat INTO ma_px FROM PhieuXuat WHERE MaDonHang = ma_don_hang AND MaKho = ma_kho;
                                            INSERT INTO ChiTietPhieuXuat(MaPhieuXuat,MaSanPham,SoLuong)VALUES(ma_px,c_dh_sp,sl);
                                            UPDATE PhieuXuat SET TongGiaTri = TongGiaTri + (sl * c_dh_dongia) WHERE MaPhieuXuat = ma_px;
                                        ELSE
                                            SELECT MaPhieuXuat INTO ma_px FROM PhieuXuat WHERE MaDonHang = ma_don_hang AND MaKho = ma_kho;
                                            ---Cap nhat lai so luong con thieu
                                            c_dh_sl := c_dh_sl - sl;
                                            UPDATE ChiTietKho SET SoLuong = 0 WHERE MaKho = ma_kho AND MaSanPham = c_dh_sp;  
                                            INSERT INTO ChiTietPhieuXuat(MaPhieuXuat,MaSanPham,SoLuong)VALUES(ma_px,c_dh_sp,sl);
                                            UPDATE PhieuXuat SET TongGiaTri = TongGiaTri + (sl * c_dh_dongia) WHERE MaPhieuXuat = ma_px;
                                        END IF; ---end check phieu
                                    END IF;---end kiem tra so luong kho
                                END IF;---end so luong is null       
                                IF (c_dh_sl > 0 and dem = count_kho) THEN ---con hang, het kho
                                    flag_stop_cursor := 0;
                                ELSIF (c_dh_sl > 0 and dem < count_kho) THEN ---con hang, con kho
                                    dem := dem + 1;
                                ELSE   ---het hang, het kho hoac con kho
                                    dem := count_kho + 1;
                                END IF;
                            END LOOP;           
                    END LOOP; 
                    CLOSE c_ctdh;
                        
                    ---CHECK FLAG STOP CURSOR
                    IF flag_stop_cursor = 0 THEN
                        ROLLBACK;
                        RETURN_VALUE := 4;
                    ELSIF FLAG_STOP_CURSOR = 1 THEN
                        ---mo cursor
                        SELECT MaKhachHang INTO ma_khach_hang FROM DonHang WHERE MaDonHang = ma_don_hang;
                        OPEN c_ctdh2; 
                        LOOP 
                        FETCH c_ctdh2 into c_dh_sp2, c_dh_sl2; 
                            EXIT WHEN c_ctdh2%notfound;
                            WHILE c_dh_sl2 > 0
                            LOOP
                                INSERT INTO PhieuBaoHanh(MaSanPham,MaKhachHang,MaDonHang,NgayTao,NgayHetHan,TrangThai)
                                VALUES(c_dh_sp,ma_khach_hang,ma_don_hang,CURRENT_DATE,ADD_MONTHS(CURRENT_DATE,12),0);
                                c_dh_sl := c_dh_sl - 1;
                            END LOOP;
                        END LOOP; 
                        FLAG_COMMIT := 0;
                    END IF;
                        
                    ---CHECK FLAG COMMIT
                    IF(FLAG_COMMIT = 0) THEN
                        COMMIT;
                        RETURN_VALUE := 0;
                    END IF;
                END IF;
            ELSE
                RETURN_VALUE := 2;
            END IF;
    ELSE
        RETURN_VALUE := 1;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;
END;

set serveroutput on format wrapped;
EXECUTE Proc_Xuat_Phieu_Xuat('NV00000001','DH00000001')
EXECUTE Proc_Xuat_Phieu_Xuat('NV00000001','DH00000003')
DELETE FROM PHIEUXUAT;
DELETE FROM CHITIETPHIEUXUAT;
SELECT * FROM CHITIETDONHANG;
SELECT * FROM CHITIETKHO;
SELECT * FROM PHIEUXUAT;
SELECT * FROM CHITIETPHIEUXUAT;
UPDATE CHITIETKHO SET SoLuong = 1 WHERE MaKho = 'K0001' AND MaSanPham = 'SP00000001';

dbms_output.put_line('Bat dau');

---Proc tình trạng giao hàng---
CREATE OR REPLACE PROCEDURE Proc_Tinh_Trang_Giao_Hang (ma_don_hang IN CHAR, ma_nhan_vien IN CHAR, tinh_trang_giao_hang IN CHAR, RETURN_VALUE OUT INT) IS
---check
CHECK_TRANG_THAI NUMBER(1);
CHECK_PX NUMBER(1);
CHECK_THE NUMBER(1);
---FLAG
FLAG_COMMIT NUMBER(1) := 1;
---ma
ma_khach_hang CHAR(10);
ma_the CHAR(10);
get_ma_kho CHAR(5);
--tongtiendon va diem
tong_gia_tri DECIMAL(18,2);
tong_diem NUMBER(38);
BEGIN
    IF(MA_DON_HANG IS NOT NULL AND MA_NHAN_VIEN IS NOT NULL AND TINH_TRANG_GIAO_HANG IS NOT NULL) THEN
        SET TRANSACTION READ WRITE;
            ---kiem tra tinh trang hien tai
            SELECT COUNT(MADONHANG) INTO CHECK_TRANG_THAI FROM DonHang WHERE MaDonHang = ma_don_hang AND TINHTRANGXACNHAN = 0 AND TINHTRANGTHANHTOAN = 0 AND TINHTRANGGIAOHANG = NULL;
            ---kiem tra xem xuat kho chua
            SELECT COUNT(MaPhieuXuat) INTO CHECK_PX FROM PhieuXuat WHERE MaDonHang = ma_don_hang;
            IF(CHECK_TRANG_THAI = 0) THEN
                RETURN_VALUE := 2;
            ELSIF(CHECK_PX = 0) THEN
                RETURN_VALUE := 3;
            ELSE
                IF(tinh_trang_giao_hang = '0') THEN
                    UPDATE DonHang SET TinhTrangGiaoHang = '0', NhanVienPhuTrach = ma_nhan_vien WHERE MaDonHang = ma_don_hang;
                    SELECT MaKhachHang INTO ma_khach_hang FROM DonHang WHERE MaDonHang = ma_don_hang;
                    SELECT COUNT(MaThe) INTO CHECK_THE FROM TheTichDiem WHERE MaKhachHang = ma_khach_hang;
                    ---kiem tra co the khong
                    IF(CHECK_THE > 0) THEN 
                        SELECT MaThe INTO ma_the FROM TheTichDiem WHERE MaKhachHang = ma_khach_hang;
                        SELECT TongGiaTri INTO tong_gia_tri FROM DonHang WHERE MaDonHang = ma_don_hang;
                        UPDATE TheTichDiem SET Diem = Diem + (tong_gia_tri / 1000) WHERE MaThe = ma_the;
                        SELECT Diem INTO tong_diem FROM TheTichDiem WHERE MaThe = ma_the;
                        ---if xep hang
                        IF tong_diem >= 5000 AND tong_diem < 20000 THEN 
                            UPDATE TheTichDiem SET Hang = 'H0002' WHERE MaThe = ma_the;
                        ELSE IF tong_diem >= 20000 AND tong_diem < 50000 THEN 
                            UPDATE TheTichDiem SET Hang = 'H0003' WHERE MaThe = ma_the; 
                        ELSE  
                            UPDATE TheTichDiem SET Hang = 'H0004' WHERE MaThe = ma_the;  
                            END IF;
                        END IF;---end if xep hang
                    END IF;---end if kiem tra the 
                    FLAG_COMMIT := 0;
                ELSIF(tinh_trang_giao_hang = '1') THEN
                    UPDATE DonHang SET TinhTrangGiaoHang = '1', NhanVienPhuTrach = ma_nhan_vien WHERE MaDonHang = ma_don_hang;
                    UPDATE PhieuXuat SET TrangThai = 1 WHERE MaDonHang = ma_don_hang;
                    UPDATE PHIEUBAOHANH SET TRANGTHAI = 1 WHERE MADONHANG = MA_DON_HANG;
                    FLAG_COMMIT := 0;
                ELSE
                    RETURN_VALUE := 4;
                END IF;
            END IF;---END CHECK TAT CA
            IF(FLAG_COMMIT = 0) THEN
                COMMIT;
                RETURN_VALUE := 0;
            ELSE
                ROLLBACK;
            END IF;
    ELSE
        RETURN_VALUE := 1;
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
        RETURN_VALUE := -1;        
END; 
   
   
EXECUTE Proc_Tinh_Trang_Giao_Hang('DH00000001','NV00000001',0);
EXECUTE Proc_Tinh_Trang_Giao_Hang('DH00000003','NV00000001',1);
SELECT * FROM DonHang;
SELECT * FROM TheTichDiem;
SELECT * FROM PhieuBaoHanh;
SELECT * FROM ChiTietKho
DELETE FROM PhieuBaoHanh;
UPDATE DonHang SET TinhTrangXacNhan = 0, TinhTrangThanhToan = 0, TinhTrangGiaoHang = NULL WHERE MaDOnHang = 'DH00000001';
COMMIT;